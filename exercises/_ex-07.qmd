---
title: "R Bootcamp - Day 7"
subtitle: "tidyverse odds & ends"
author: "Jay Hesselberth"
---

```{r}
#| include: false
library(tidyverse)
library(cowplot)
library(here)
```

## Class 7 outline

* Accessing data in vectors (Exercise)
* other tidyverse packages (stringr & forcats)
* dplyr table joins (Exercise)
* ggplot2 scale functions
* ggplot2 multi-panel figures (Exercise)
* ggplot2 saving figures

# Accessing data in vectors

## Using `[`, `[[`, and `$` {.smaller}

```{r}
```

```{r}
```

```{r}
```

```{r}
```

```{r}
```

`[` can return a range, `[[` returns a single value.

## vector selection with logic {.smaller}

one-step filtering.

```{r}
```

two-step filtering. same result.

```{r}
```

```{r}
```

also can use with `is.na()` to identify / exclude `NA` values in a vector.

Use `sum()` to figure out how many are `TRUE`.

```{r}
```

```{r}
```

# other tidyverse libraries

## string operations with stringr {.smaller}

stringr provides several useful functions for operating on strings.

See the [stringr cheatsheet](https://github.com/rstudio/cheatsheets/blob/main/strings.pdf)

```{r}
```

```{r}
```

```{r}
```

```{r}
```

`str_c()` is similar to `paste` and `paste0` but the behavior is more consistent.

## forcats operations for factors {.smaller}

forcats provides several utilities for working with factors.

See the [forcats cheatsheet](https://github.com/rstudio/cheatsheets/blob/main/factors.pdf)

```{r}
```

```{r}
```

```{r}
```

## Use forcats to reorder aspects of plots {.smaller}

See the [FAQ on rordering in ggplot2](https://ggplot2.tidyverse.org/articles/faq-reordering.html)

```{r}
```

```{r}
```

# dplyr

### Combining tables by *variables* (i.e., columns)

  - `bind_cols()`
  - `left_join()`
  - `right_join()`
  - `inner_join()`
  - `full_join()`

### Combining tables by *cases* (i.e., rows)

  - `bind_rows()`
  - `intersect()`
  - `setdiff()`
  - `union()`

## dplyr cheatsheet

Look at "combine variables" and "combine cases" at the top.

## tables for joining

```{r}
```

```{r}
```

## mutating joins - visualized

## Joining tables by a variable - Exercise 1

```{r}
```

```{r}
```

## filtering joins - visualized

## Joining tables by a variable - Exercise 2

```{r}
```

```{r}
```

```{r}
```

## Other dplyr verbs

There are many other dplyr verbs.

-
We've used `rename`, `count`, `add_row`, `add_column`,
`distinct`, `sample_n`, `sample_frac`, `slice`, `pull`

Check out the [dplyr cheatsheet]() to learn more!

# ggplot2

## scale functions in ggplot2

- `scale_color_brewer()` and `scale_fill_brewer()` control `color` and `fill` aesthetics.
- See available [ggplot2 brewer palettes](https://ggplot2.tidyverse.org/reference/scale_brewer.html#palettes)

```{r}
```

## scale functions in ggplot2 {.smaller}

```{r}
```

```{r}
```

## Set up a points plot {.smaller}

```{r}
```

## How to combine multiple plots into a figure? {.smaller}

```{r}
```

## We have 4 legends - can they be condensed? {.smaller}

Yes, but it is not exactly straightforward.

```{r}
```

## Saving plots (Exercise 18)

Saves last plot as 5' x 5' file named `plot_final.png` in working directory.

Matches file type to file extension.

```{r}
```
