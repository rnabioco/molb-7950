{
  "hash": "1e6a47a4c044394241919711ec70e79e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"R Bootcamp - Class 7\"\nsubtitle: \"Tidyverse odds & ends\"\nauthor: \"{{< var instructor.block.bootcamp-r >}}\"\n---\n\n## Class 7 outline\n\n* String manipulation with `stringr`\n* Factor operations with `forcats`\n* Join functions with `dplyr`\n* Advanced plotting with `ggplot2`\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(here)\nlibrary(cowplot)\n\n# set the theme for all plots\ntheme_set(theme_cowplot())\n\n# overwrite as tibble\npenguins <- as_tibble(penguins)\n```\n:::\n\n\n# String operations\n\n## Combining strings with `str_c()`\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nstr_c(\"letter: \", letters[1:5])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"letter: a\" \"letter: b\" \"letter: c\" \"letter: d\"\n[5] \"letter: e\"\n```\n\n\n:::\n:::\n\n\n---\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\npenguins |>\n  mutate(\n    id = str_c(species, island, sep = \"_\"),\n    label = str_c(species, \" (\", year, \")\")\n  ) |>\n  select(species, island, year, id, label)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 5\n   species island     year id               label        \n   <fct>   <fct>     <int> <chr>            <chr>        \n 1 Adelie  Torgersen  2007 Adelie_Torgersen Adelie (2007)\n 2 Adelie  Torgersen  2007 Adelie_Torgersen Adelie (2007)\n 3 Adelie  Torgersen  2007 Adelie_Torgersen Adelie (2007)\n 4 Adelie  Torgersen  2007 Adelie_Torgersen Adelie (2007)\n 5 Adelie  Torgersen  2007 Adelie_Torgersen Adelie (2007)\n 6 Adelie  Torgersen  2007 Adelie_Torgersen Adelie (2007)\n 7 Adelie  Torgersen  2007 Adelie_Torgersen Adelie (2007)\n 8 Adelie  Torgersen  2007 Adelie_Torgersen Adelie (2007)\n 9 Adelie  Torgersen  2007 Adelie_Torgersen Adelie (2007)\n10 Adelie  Torgersen  2007 Adelie_Torgersen Adelie (2007)\n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n::: {.notes}\n`str_c()` is similar to `paste` and `paste0` but the behavior is more consistent.\n:::\n\n## Detecting patterns with `str_detect()`\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nstr_detect(\"A\", LETTERS[1:10])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10] FALSE\n```\n\n\n:::\n:::\n\n\n---\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nmtcars_tbl <-\n  rownames_to_column(mtcars, \"name\") |>\n  as_tibble()\n\n# find the Mercedes Benz's\nfilter(\n  mtcars_tbl,\n  str_detect(name, \"Merc\")\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 12\n  name         mpg   cyl  disp    hp  drat    wt  qsec    vs\n  <chr>      <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1 Merc 240D   24.4     4  147.    62  3.69  3.19  20       1\n2 Merc 230    22.8     4  141.    95  3.92  3.15  22.9     1\n3 Merc 280    19.2     6  168.   123  3.92  3.44  18.3     1\n4 Merc 280C   17.8     6  168.   123  3.92  3.44  18.9     1\n5 Merc 450SE  16.4     8  276.   180  3.07  4.07  17.4     0\n6 Merc 450SL  17.3     8  276.   180  3.07  3.73  17.6     0\n7 Merc 450S…  15.2     8  276.   180  3.07  3.78  18       0\n# ℹ 3 more variables: am <dbl>, gear <dbl>, carb <dbl>\n```\n\n\n:::\n:::\n\n\n## Splitting strings with `str_split()` {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nids <- c(\"x-1\", \"x-2\", \"y-1\", \"y-2\")\nstr_split(ids, \"-\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"x\" \"1\"\n\n[[2]]\n[1] \"x\" \"2\"\n\n[[3]]\n[1] \"y\" \"1\"\n\n[[4]]\n[1] \"y\" \"2\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# just the first parts\nstr_split_i(ids, '-', 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"x\" \"x\" \"y\" \"y\"\n```\n\n\n:::\n:::\n\n\n---\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\n# create some sample data\ndf <- tribble(\n  ~ sample_ids,\n  \"gene_1_treatment\",\n  \"gene_2_control\",\n  \"gene_3_treatment\"\n)\n\nmutate(\n  df,\n  split_parts = str_split(sample_ids, \"_\"),\n  gene_part = map_chr(split_parts, ~ .x[1]),\n  number_part = map_chr(split_parts, ~ .x[2]),\n  condition = map_chr(split_parts, ~ .x[3])\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  sample_ids     split_parts gene_part number_part condition\n  <chr>          <list>      <chr>     <chr>       <chr>    \n1 gene_1_treatm… <chr [3]>   gene      1           treatment\n2 gene_2_control <chr [3]>   gene      2           control  \n3 gene_3_treatm… <chr [3]>   gene      3           treatment\n```\n\n\n:::\n:::\n\n\n# Factor operations\n\n## Counting factor levels with `fct_count()`\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\n# equivalent with dplyr\npenguins |>\n  count(species)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  species       n\n  <fct>     <int>\n1 Adelie      152\n2 Chinstrap    68\n3 Gentoo      124\n```\n\n\n:::\n:::\n\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nfct_count(penguins$species)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  f             n\n  <fct>     <int>\n1 Adelie      152\n2 Chinstrap    68\n3 Gentoo      124\n```\n\n\n:::\n:::\n\n\n## Reordering factors with `fct_reorder()`\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass\n  )\n) +\n  geom_boxplot(\n    fill = \"grey50\"\n  )\n```\n\n::: {.cell-output-display}\n![](slides-07_files/figure-revealjs/unnamed-chunk-10-1.png){fig-alt='Bar plot showing penguin species counts, ordered by frequency from lowest to highest' width=960}\n:::\n:::\n\n\n---\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\nggplot(\n  penguins,\n  aes(\n    x = fct_reorder(\n      species,\n      body_mass,\n      .fun = sd,\n      na.rm = TRUE\n    ),\n    y = body_mass\n  )\n) +\n  geom_boxplot(\n    fill = \"grey50\"\n  )\n```\n\n::: {.cell-output-display}\n![](slides-07_files/figure-revealjs/unnamed-chunk-11-1.png){fig-alt='Bar plot showing penguin species counts, ordered by frequency from lowest to highest' width=960}\n:::\n:::\n\n\n## Lumping infrequent levels with `fct_lump()`\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\n# create some sample data with many levels.\n# how many rows / cols are in this tibble?\nsample_data <-\n  tibble(\n    category = factor(\n      sample(\n        letters[1:10],\n        100,\n        replace = TRUE\n      )\n    )\n  )\n```\n:::\n\n\n---\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nmutate(\n  sample_data,\n  lumped = fct_lump_n(\n    category,\n    n = 3\n  )\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 100 × 2\n   category lumped\n   <fct>    <fct> \n 1 c        Other \n 2 g        Other \n 3 b        Other \n 4 h        Other \n 5 e        e     \n 6 e        e     \n 7 i        Other \n 8 i        Other \n 9 c        Other \n10 d        d     \n# ℹ 90 more rows\n```\n\n\n:::\n:::\n\n\n---\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nmutate(\n  sample_data,\n  lumped = fct_lump_n(\n    category,\n    n = 3\n  )\n) |>\n  count(lumped)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 2\n  lumped     n\n  <fct>  <int>\n1 d         12\n2 e         14\n3 f         17\n4 Other     57\n```\n\n\n:::\n:::\n\n\n::: {.aside}\nDo your numbers look different? `sample()` is not reproducible by default.\n:::\n\n## Aside on `sample()` and reproducibility {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\n# run this several times\nsample(0:100, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  6 27 28 55  8 60  1 29 83 61\n```\n\n\n:::\n\n```{.r .cell-code}\nsample(0:100, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 51 90 17 14 81 98 89  4 62 75\n```\n\n\n:::\n:::\n\n\n---\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\n# now make `sample()` reproducible.\n# you have the set the seed each time.\n\nset.seed(42) # set the seed for reproducibility\nsample(0:100, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  48  64  24  73  17 100  46  23  70  88\n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(42)\nsample(0:100, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  48  64  24  73  17 100  46  23  70  88\n```\n\n\n:::\n\n```{.r .cell-code}\nsample(0:100, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 36 19 25  2 40 88 26 35  4 83\n```\n\n\n:::\n:::\n\n\n::: {.aside}\nthis also applies to `rnorm()`, `runif()`, and other random number generation functions.\n:::\n\n# Join operations\n\n## Setup\n\nOpen up the [tidyexplain](https://www.garrickadenbuie.com/project/tidyexplain/) page.\n\n## Understanding joins\n\nJoins combine data from two tables based on matching keys.\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nband_members\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  name  band   \n  <chr> <chr>  \n1 Mick  Stones \n2 John  Beatles\n3 Paul  Beatles\n```\n\n\n:::\n:::\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nband_instruments\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  name  plays \n  <chr> <chr> \n1 John  guitar\n2 Paul  bass  \n3 Keith guitar\n```\n\n\n:::\n:::\n\n\n## `left_join()` - keep all rows from left table\n\nMost common join - keeps all observations from the \"primary\" table.\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nband_members |>\n  left_join(\n    band_instruments,\n    by = \"name\"\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  name  band    plays \n  <chr> <chr>   <chr> \n1 Mick  Stones  <NA>  \n2 John  Beatles guitar\n3 Paul  Beatles bass  \n```\n\n\n:::\n:::\n\n\n## `inner_join()` - keep only matching rows\n\nOnly keeps rows that exist in both tables.\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nband_members |>\n  inner_join(\n    band_instruments,\n    by = \"name\"\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n  name  band    plays \n  <chr> <chr>   <chr> \n1 John  Beatles guitar\n2 Paul  Beatles bass  \n```\n\n\n:::\n:::\n\n\n## `full_join()` - keep all rows from both tables\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nband_members |>\n  full_join(\n    band_instruments,\n    by = \"name\"\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n  name  band    plays \n  <chr> <chr>   <chr> \n1 Mick  Stones  <NA>  \n2 John  Beatles guitar\n3 Paul  Beatles bass  \n4 Keith <NA>    guitar\n```\n\n\n:::\n:::\n\n\nKeeps everything, filling missing values with `NA`.\n\n# Advanced plotting\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\n```\n:::\n\n\n## scale functions in ggplot2 {.smaller}\n\n- `scale_color_brewer()` and `scale_fill_brewer()` control `color` and `fill` aesthetics.\n- See available [ggplot2 brewer palettes](https://ggplot2.tidyverse.org/reference/scale_brewer.html#palettes)\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\np1 <- ggplot(\n  mtcars_tbl,\n  aes(\n    x = mpg,\n    y = hp,\n    # why do we `factor` here?\n    color = factor(cyl)\n  )\n) +\n  geom_point(size = 5)\n\np1\n```\n\n::: {.cell-output-display}\n![](slides-07_files/figure-revealjs/unnamed-chunk-23-1.png){fig-alt='Example of a ggplot2 scatter plot with points colored by number of cylinders, using the cowplot theme' width=960}\n:::\n:::\n\n\n---\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\np1 + scale_color_brewer(palette = \"Set1\")\n```\n\n::: {.cell-output-display}\n![](slides-07_files/figure-revealjs/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n\n\n---\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\np1 + scale_color_brewer(palette = \"Dark2\")\n```\n\n::: {.cell-output-display}\n![](slides-07_files/figure-revealjs/unnamed-chunk-25-1.png){width=960}\n:::\n:::\n\n\n## Combining multiple plots into a figure? {.smaller}\n\nUse the [`{patchwork}` package](https://patchwork.data-imaginist.com/).\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\n(p1 + p1) /\n  (p1 + p1) +\n  plot_annotation(tag_levels = 'A') +\n  plot_layout(guides = 'collect')\n```\n\n::: {.cell-output-display}\n![](slides-07_files/figure-revealjs/unnamed-chunk-26-1.png){fig-alt='Example of combining multiple ggplot2 plots into a single figure using the patchwork package' width=960}\n:::\n:::\n\n\n## Saving plots\n\nSaves last plot as 5' x 5' file named `plot_final.png` in working directory.\n\nMatches file type to file extension (`*.png`, `*.jpeg`, `*.pdf`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# default is to save last plot in the buffer\n# can also specify with the `plot` argument\nggsave(\n  filename = here(\"img/plot_final.png\"),\n  plot = last_plot(),\n  width = 5,\n  height = 5\n)\n```\n:::\n\n\n# Displaying data in tables\n\nWe'll use a couple of approaches to display data in tables instead of graphs, which\ncan be useful for reports or presentations.\n\n## Using `knitr::kable()`\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\nlibrary(knitr) # also loaded with library(tidyverse)\n\nkable(\n  penguins |>\n    select(species, island, body_mass) |>\n    head(10),\n  caption = \"First 10 rows of the penguins dataset\"\n)\n```\n\n::: {.cell-output-display}\n\n\nTable: First 10 rows of the penguins dataset\n\n|species |island    | body_mass|\n|:-------|:---------|---------:|\n|Adelie  |Torgersen |      3750|\n|Adelie  |Torgersen |      3800|\n|Adelie  |Torgersen |      3250|\n|Adelie  |Torgersen |        NA|\n|Adelie  |Torgersen |      3450|\n|Adelie  |Torgersen |      3650|\n|Adelie  |Torgersen |      3625|\n|Adelie  |Torgersen |      4675|\n|Adelie  |Torgersen |      3475|\n|Adelie  |Torgersen |      4250|\n\n\n:::\n:::\n\n\n## Using `gt`\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\nlibrary(gt)\n\ngt(\n  penguins |>\n    select(species, island, body_mass)\n) |>\n  tab_header(\n    title = \"The {penguins} dataset\"\n  ) |>\n  opt_interactive(\n    use_pagination = TRUE,\n    use_filters = TRUE\n  )\n```\n\n::: {.cell-output-display  html-table-processing=none}\n\n```{=html}\n<div id=\"bhczajxkov\" class=\".gt_table\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#bhczajxkov table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#bhczajxkov thead, #bhczajxkov tbody, #bhczajxkov tfoot, #bhczajxkov tr, #bhczajxkov td, #bhczajxkov th {\n  border-style: none;\n}\n\n#bhczajxkov p {\n  margin: 0;\n  padding: 0;\n}\n\n#bhczajxkov .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#bhczajxkov .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#bhczajxkov .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#bhczajxkov .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#bhczajxkov .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#bhczajxkov .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bhczajxkov .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#bhczajxkov .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#bhczajxkov .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#bhczajxkov .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#bhczajxkov .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#bhczajxkov .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#bhczajxkov .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#bhczajxkov .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#bhczajxkov .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#bhczajxkov .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#bhczajxkov .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#bhczajxkov .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#bhczajxkov .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bhczajxkov .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#bhczajxkov .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#bhczajxkov .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#bhczajxkov .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bhczajxkov .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#bhczajxkov .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#bhczajxkov .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bhczajxkov .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bhczajxkov .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#bhczajxkov .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bhczajxkov .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#bhczajxkov .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bhczajxkov .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#bhczajxkov .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bhczajxkov .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#bhczajxkov .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bhczajxkov .gt_left {\n  text-align: left;\n}\n\n#bhczajxkov .gt_center {\n  text-align: center;\n}\n\n#bhczajxkov .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#bhczajxkov .gt_font_normal {\n  font-weight: normal;\n}\n\n#bhczajxkov .gt_font_bold {\n  font-weight: bold;\n}\n\n#bhczajxkov .gt_font_italic {\n  font-style: italic;\n}\n\n#bhczajxkov .gt_super {\n  font-size: 65%;\n}\n\n#bhczajxkov .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#bhczajxkov .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#bhczajxkov .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#bhczajxkov .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#bhczajxkov .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#bhczajxkov .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#bhczajxkov .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#bhczajxkov .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#bhczajxkov div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<div style=\"font-family:system-ui, &#39;Segoe UI&#39;, Roboto, Helvetica, Arial, sans-serif;border-top-style:solid;border-top-width:2px;border-top-color:#D3D3D3;\">\n<div class=\"gt_heading gt_title gt_font_normal\" style=\"text-size:bigger;\">The {penguins} dataset</div>\n<div class=\"gt_heading gt_subtitle \"></div>\n</div>\n<div id=\"bhczajxkov\" class=\"reactable html-widget\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"bhczajxkov\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"species\":[\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\"],\"island\":[\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\"],\"body_mass\":[3750,3800,3250,\"NA\",3450,3650,3625,4675,3475,4250,3300,3700,3200,3800,4400,3700,3450,4500,3325,4200,3400,3600,3800,3950,3800,3800,3550,3200,3150,3950,3250,3900,3300,3900,3325,4150,3950,3550,3300,4650,3150,3900,3100,4400,3000,4600,3425,2975,3450,4150,3500,4300,3450,4050,2900,3700,3550,3800,2850,3750,3150,4400,3600,4050,2850,3950,3350,4100,3050,4450,3600,3900,3550,4150,3700,4250,3700,3900,3550,4000,3200,4700,3800,4200,3350,3550,3800,3500,3950,3600,3550,4300,3400,4450,3300,4300,3700,4350,2900,4100,3725,4725,3075,4250,2925,3550,3750,3900,3175,4775,3825,4600,3200,4275,3900,4075,2900,3775,3350,3325,3150,3500,3450,3875,3050,4000,3275,4300,3050,4000,3325,3500,3500,4475,3425,3900,3175,3975,3400,4250,3400,3475,3050,3725,3000,3650,4250,3475,3450,3750,3700,4000,4500,5700,4450,5700,5400,4550,4800,5200,4400,5150,4650,5550,4650,5850,4200,5850,4150,6300,4800,5350,5700,5000,4400,5050,5000,5100,4100,5650,4600,5550,5250,4700,5050,6050,5150,5400,4950,5250,4350,5350,3950,5700,4300,4750,5550,4900,4200,5400,5100,5300,4850,5300,4400,5000,4900,5050,4300,5000,4450,5550,4200,5300,4400,5650,4700,5700,4650,5800,4700,5550,4750,5000,5100,5200,4700,5800,4600,6000,4750,5950,4625,5450,4725,5350,4750,5600,4600,5300,4875,5550,4950,5400,4750,5650,4850,5200,4925,4875,4625,5250,4850,5600,4975,5500,4725,5500,4700,5500,4575,5500,5000,5950,4650,5500,4375,5850,4875,6000,4925,\"NA\",4850,5750,5200,5400,3500,3900,3650,3525,3725,3950,3250,3750,4150,3700,3800,3775,3700,4050,3575,4050,3300,3700,3450,4400,3600,3400,2900,3800,3300,4150,3400,3800,3700,4550,3200,4300,3350,4100,3600,3900,3850,4800,2700,4500,3950,3650,3550,3500,3675,4450,3400,4300,3250,3675,3325,3950,3600,4050,3350,3450,3250,4050,3800,3525,3950,3650,3650,4000,3400,3775,4100,3775]},\"columns\":[{\"id\":\"species\",\"name\":\"species\",\"type\":\"factor\",\"na\":\"NA\",\"minWidth\":125,\"style\":\"function(rowInfo, colInfo) {\\nconst rowIndex = rowInfo.index + 1\\n}\",\"html\":true,\"align\":\"center\"},{\"id\":\"island\",\"name\":\"island\",\"type\":\"factor\",\"na\":\"NA\",\"minWidth\":125,\"style\":\"function(rowInfo, colInfo) {\\nconst rowIndex = rowInfo.index + 1\\n}\",\"html\":true,\"align\":\"center\"},{\"id\":\"body_mass\",\"name\":\"body_mass\",\"type\":\"numeric\",\"na\":\"NA\",\"minWidth\":125,\"style\":\"function(rowInfo, colInfo) {\\nconst rowIndex = rowInfo.index + 1\\n}\",\"html\":true,\"align\":\"right\"}],\"filterable\":true,\"defaultPageSize\":10,\"showPageSizeOptions\":false,\"pageSizeOptions\":[10,25,50,100],\"paginationType\":\"numbers\",\"showPagination\":true,\"showPageInfo\":true,\"minRows\":1,\"height\":\"auto\",\"theme\":{\"color\":\"#333333\",\"backgroundColor\":\"#FFFFFF\",\"stripedColor\":\"rgba(128,128,128,0.05)\",\"style\":{\"font-family\":\"system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif\",\"fontSize\":\"16px\"},\"tableStyle\":{\"borderTopStyle\":\"solid\",\"borderTopWidth\":\"2px\",\"borderTopColor\":\"#D3D3D3\"},\"headerStyle\":{\"fontWeight\":\"normal\",\"backgroundColor\":\"transparent\",\"borderBottomStyle\":\"solid\",\"borderBottomWidth\":\"2px\",\"borderBottomColor\":\"#D3D3D3\"},\"groupHeaderStyle\":{\"fontWeight\":\"normal\",\"backgroundColor\":\"transparent\",\"borderBottomStyle\":\"solid\",\"borderBottomWidth\":\"2px\",\"borderBottomColor\":\"#D3D3D3\"},\"cellStyle\":{\"fontWeight\":\"normal\"}},\"elementId\":\"bhczajxkov\",\"dataKey\":\"727162813ec467ca664430a68bbfb2cf\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[\"tag.attribs.columns.0.style\",\"tag.attribs.columns.1.style\",\"tag.attribs.columns.2.style\"],\"jsHooks\":[]}</script>\n</div>\n```\n\n:::\n:::\n\n",
    "supporting": [
      "slides-07_files/figure-revealjs"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/core-js-2.5.3/shim.min.js\"></script>\n<script src=\"../site_libs/react-18.2.0/react.min.js\"></script>\n<script src=\"../site_libs/react-18.2.0/react-dom.min.js\"></script>\n<script src=\"../site_libs/reactwidget-2.0.0/react-tools.js\"></script>\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/reactable-0.4.4/reactable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/reactable-binding-0.4.4/reactable.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}