{
  "hash": "0af82012836c737e4e6f0dfce948acc2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"R Bootcamp - Day 3\"\nsubtitle: \"dplyr\"\nauthor: \"{{< var instructor.block.bootcamp-r >}}\"\n---\n\n\n\n## Class 3 outline {.smaller}\n\n* Introduce _dplyr_ & today's datasets (Exercise 1)\n* Review basic functions of _dplyr_\n  * core dplyr verbs:\n  - `arrange` (Exercise 2)\n  - `filter` (Exercise 3)\n  - `select` (Exercise 4)\n  - `mutate`  and the pipe (Exercise 5)\n  - `summarise` (Exercise 6)\n  * modify scope of verbs using: `group_by` (Exercise 7)\n  * and many others! `rename`, `count`, `add_row`, `add_column`, `distinct`,\n    `sample_n`, `sample_frac`, `slice`, `pull` (Exercise 8)\n\n## dplyr overview\n\ndplyr:\n\n* provides a set of tools for efficiently manipulating data sets in R.\n* is extremely fast even with large data sets.\n* follows the tidyverse grammar and philosophy; human-readable and intuitive\n* encourages linking of verbs together using pipes `|>` (or the older `%>%`)\n\n## Today's datasets {.smaller}\n\n* We will use a data set that comes with the `dplyr` package to explore its functions.\n\n* `dplyr::starwars` contains data for characters from Star Wars.\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 <NA>       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 <NA>       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 <NA>       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n```\n\n\n:::\n:::\n\n\n. . .\n\nExplore `starwars` in the console with `head()`, `View()`, and `summary()`.\n\n## dplyr package {.smaller}\n\n`dplyr` is a grammar of data manipulation, providing a consistent set of\nverbs that help you solve the most common data manipulation challenges:\n\n  - `arrange()` changes the ordering of the rows.\n  - `filter()` picks cases based on their values.\n  - `select()` picks variables based on their names.\n  - `mutate()` adds new variables that are functions of existing variables\n  - `summarise()` reduces multiple values down to a single summary.\n\n. . .\n\n- These all combine naturally with `group_by()` which allows you to perform\nany operation \"by group\".\n\n- Pipes `|>` allows different functions to be used together to create a\nworkflow. `x |> f(y)` turns into `f(x, y)`\n\n## arrange - Syntax\n\n- `arrange()` orders rows by values of one or more columns (low to high).\n- The `desc()` helper orders high to low.\n\n. . .\n\n```r\narrange(data = ..., <colname>)\n```\n\n## arrange - Exercise 2 {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\n# default is to arrange in ascending order\narrange(starwars, height)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Yoda         66    17 white      green      brown            896 male  mascu…\n 2 Ratts T…     79    15 none       grey, blue unknown           NA male  mascu…\n 3 Wicket …     88    20 brown      brown      brown              8 male  mascu…\n 4 Dud Bolt     94    45 none       blue, grey yellow            NA male  mascu…\n 5 R2-D2        96    32 <NA>       white, bl… red               33 none  mascu…\n 6 R4-P17       96    NA none       silver, r… red, blue         NA none  femin…\n 7 R5-D4        97    32 <NA>       white, red red               NA none  mascu…\n 8 Sebulba     112    40 none       grey, red  orange            NA male  mascu…\n 9 Gasgano     122    NA none       white, bl… black             NA male  mascu…\n10 Watto       137    NA black      blue, grey yellow            NA male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n```\n\n\n:::\n:::\n\n\n## arrange - Exercise 2 {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\n# arrange in descending order\narrange(starwars, desc(height))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Yarael …    264    NA none       white      yellow          NA   male  mascu…\n 2 Tarfful     234   136 brown      brown      blue            NA   male  mascu…\n 3 Lama Su     229    88 none       grey       black           NA   male  mascu…\n 4 Chewbac…    228   112 brown      unknown    blue           200   male  mascu…\n 5 Roos Ta…    224    82 none       grey       orange          NA   male  mascu…\n 6 Grievous    216   159 none       brown, wh… green, y…       NA   male  mascu…\n 7 Taun We     213    NA none       grey       black           NA   fema… femin…\n 8 Rugor N…    206    NA none       green      orange          NA   male  mascu…\n 9 Tion Me…    206    80 none       grey       black           NA   male  mascu…\n10 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n```\n\n\n:::\n:::\n\n\n## arrange - Exercise 2 {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\n# arrange by multiple columns\narrange(starwars, height, mass)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Yoda         66    17 white      green      brown            896 male  mascu…\n 2 Ratts T…     79    15 none       grey, blue unknown           NA male  mascu…\n 3 Wicket …     88    20 brown      brown      brown              8 male  mascu…\n 4 Dud Bolt     94    45 none       blue, grey yellow            NA male  mascu…\n 5 R2-D2        96    32 <NA>       white, bl… red               33 none  mascu…\n 6 R4-P17       96    NA none       silver, r… red, blue         NA none  femin…\n 7 R5-D4        97    32 <NA>       white, red red               NA none  mascu…\n 8 Sebulba     112    40 none       grey, red  orange            NA male  mascu…\n 9 Gasgano     122    NA none       white, bl… black             NA male  mascu…\n10 Watto       137    NA black      blue, grey yellow            NA male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n```\n\n\n:::\n:::\n\n\n## filter - Syntax\n\n- `filter()` chooses rows/cases where conditions are true.\n\n```r\nfilter(data = ..., <condition>)\n```\n\n## filter - Exercise 3 {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nfilter(starwars, skin_color == \"light\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 11 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Leia Or…    150    49 brown      light      brown             19 fema… femin…\n 2 Owen La…    178   120 brown, gr… light      blue              52 male  mascu…\n 3 Beru Wh…    165    75 brown      light      blue              47 fema… femin…\n 4 Biggs D…    183    84 black      light      brown             24 male  mascu…\n 5 Lobot       175    79 none       light      blue              37 male  mascu…\n 6 Padmé A…    185    45 brown      light      brown             46 fema… femin…\n 7 Cordé       157    NA brown      light      brown             NA <NA>  <NA>  \n 8 Dormé       165    NA brown      light      brown             NA fema… femin…\n 9 Raymus …    188    79 brown      light      brown             NA male  mascu…\n10 Rey          NA    NA brown      light      hazel             NA fema… femin…\n11 Poe Dam…     NA    NA brown      light      brown             NA male  mascu…\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n```\n\n\n:::\n:::\n\n\n## filter - Exercise 3 {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nfilter(starwars, height < 150)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 R2-D2        96    32 <NA>       white, bl… red               33 none  mascu…\n 2 R5-D4        97    32 <NA>       white, red red               NA none  mascu…\n 3 Yoda         66    17 white      green      brown            896 male  mascu…\n 4 Wicket …     88    20 brown      brown      brown              8 male  mascu…\n 5 Watto       137    NA black      blue, grey yellow            NA male  mascu…\n 6 Sebulba     112    40 none       grey, red  orange            NA male  mascu…\n 7 Ratts T…     79    15 none       grey, blue unknown           NA male  mascu…\n 8 Dud Bolt     94    45 none       blue, grey yellow            NA male  mascu…\n 9 Gasgano     122    NA none       white, bl… black             NA male  mascu…\n10 R4-P17       96    NA none       silver, r… red, blue         NA none  femin…\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n```\n\n\n:::\n:::\n\n\n## filter - Exercise 3 {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nfilter(\n  starwars,\n  mass > mean(mass, na.rm = TRUE)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 2 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 3 Chewbac…    228   112 brown      unknown    blue           200   male  mascu…\n 4 Jabba D…    175  1358 <NA>       green-tan… orange         600   herm… mascu…\n 5 Jek Ton…    180   110 brown      fair       blue            NA   <NA>  <NA>  \n 6 IG-88       200   140 none       metal      red             15   none  mascu…\n 7 Bossk       190   113 none       green      red             53   male  mascu…\n 8 Dexter …    198   102 none       brown      yellow          NA   male  mascu…\n 9 Grievous    216   159 none       brown, wh… green, y…       NA   male  mascu…\n10 Tarfful     234   136 brown      brown      blue            NA   male  mascu…\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n```\n\n\n:::\n:::\n\n\n## filter - Exercise 3 {.smaller}\n\nFilter out cases where `hair_color` is `NA`\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nfilter(starwars, is.na(hair_color))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n1 C-3PO        167    75 <NA>       gold       yellow           112 none  mascu…\n2 R2-D2         96    32 <NA>       white, bl… red               33 none  mascu…\n3 R5-D4         97    32 <NA>       white, red red               NA none  mascu…\n4 Greedo       173    74 <NA>       green      black             44 male  mascu…\n5 Jabba De…    175  1358 <NA>       green-tan… orange           600 herm… mascu…\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n```\n\n\n:::\n:::\n\n\n## filter - Exercise 3 {.smaller}\n\n* The most frequently used comparison operators are:\n\n- `>`, `<`, `>=`, `<=`, `==` (equal), `!=` (not equal)\n- `is.na()`, `!is.na()`, and `%in%` (contained in a vector of cases).\n\n. . .\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nfilter(\n  starwars,\n  skin_color %in% c(\"light\", \"fair\", \"pale\")\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 33 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 3 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 4 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 5 Biggs D…    183    84 black      light      brown           24   male  mascu…\n 6 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n 7 Anakin …    188    84 blond      fair       blue            41.9 male  mascu…\n 8 Wilhuff…    180    NA auburn, g… fair       blue            64   male  mascu…\n 9 Han Solo    180    80 brown      fair       brown           29   male  mascu…\n10 Wedge A…    170    77 brown      fair       hazel           21   male  mascu…\n# ℹ 23 more rows\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n```\n\n\n:::\n:::\n\n\n---\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\n# can also store as a named vector and use %in% with the vector\ncolor <- c(\"light\", \"fair\", \"pale\")\nfilter(starwars, skin_color %in% color)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 33 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 3 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 4 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 5 Biggs D…    183    84 black      light      brown           24   male  mascu…\n 6 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n 7 Anakin …    188    84 blond      fair       blue            41.9 male  mascu…\n 8 Wilhuff…    180    NA auburn, g… fair       blue            64   male  mascu…\n 9 Han Solo    180    80 brown      fair       brown           29   male  mascu…\n10 Wedge A…    170    77 brown      fair       hazel           21   male  mascu…\n# ℹ 23 more rows\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n```\n\n\n:::\n:::\n\n\n---\n\nConditions can be combined using `&` (and), `|` (or).\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nfilter(\n  starwars,\n  skin_color == \"light\" | eye_color == \"brown\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 25 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Leia Or…    150  49   brown      light      brown           19   fema… femin…\n 2 Owen La…    178 120   brown, gr… light      blue            52   male  mascu…\n 3 Beru Wh…    165  75   brown      light      blue            47   fema… femin…\n 4 Biggs D…    183  84   black      light      brown           24   male  mascu…\n 5 Han Solo    180  80   brown      fair       brown           29   male  mascu…\n 6 Yoda         66  17   white      green      brown          896   male  mascu…\n 7 Boba Fe…    183  78.2 black      fair       brown           31.5 male  mascu…\n 8 Lando C…    177  79   black      dark       brown           31   male  mascu…\n 9 Lobot       175  79   none       light      blue            37   male  mascu…\n10 Arvel C…     NA  NA   brown      fair       brown           NA   male  mascu…\n# ℹ 15 more rows\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n```\n\n\n:::\n:::\n\n\n---\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nfilter(\n  starwars,\n  skin_color == \"light\" & eye_color == \"brown\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n1 Leia Org…    150    49 brown      light      brown             19 fema… femin…\n2 Biggs Da…    183    84 black      light      brown             24 male  mascu…\n3 Padmé Am…    185    45 brown      light      brown             46 fema… femin…\n4 Cordé        157    NA brown      light      brown             NA <NA>  <NA>  \n5 Dormé        165    NA brown      light      brown             NA fema… femin…\n6 Raymus A…    188    79 brown      light      brown             NA male  mascu…\n7 Poe Dame…     NA    NA brown      light      brown             NA male  mascu…\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n```\n\n\n:::\n:::\n\n\n## select - Syntax\n\n- `select` extracts one or more columns from a table\n\n```r\nselect(data = ..., <colname>)\n```\n\n## select - Exercise 4 {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\n# select *only* the variable `hair_color`\nselect(starwars, hair_color)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 × 1\n   hair_color   \n   <chr>        \n 1 blond        \n 2 <NA>         \n 3 <NA>         \n 4 none         \n 5 brown        \n 6 brown, grey  \n 7 brown        \n 8 <NA>         \n 9 black        \n10 auburn, white\n# ℹ 77 more rows\n```\n\n\n:::\n:::\n\n\n## select - Exercise 4 {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\n# drop the variable `hair_color`\nselect(starwars, -hair_color)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 × 13\n   name      height  mass skin_color eye_color birth_year sex   gender homeworld\n   <chr>      <int> <dbl> <chr>      <chr>          <dbl> <chr> <chr>  <chr>    \n 1 Luke Sky…    172    77 fair       blue            19   male  mascu… Tatooine \n 2 C-3PO        167    75 gold       yellow         112   none  mascu… Tatooine \n 3 R2-D2         96    32 white, bl… red             33   none  mascu… Naboo    \n 4 Darth Va…    202   136 white      yellow          41.9 male  mascu… Tatooine \n 5 Leia Org…    150    49 light      brown           19   fema… femin… Alderaan \n 6 Owen Lars    178   120 light      blue            52   male  mascu… Tatooine \n 7 Beru Whi…    165    75 light      blue            47   fema… femin… Tatooine \n 8 R5-D4         97    32 white, red red             NA   none  mascu… Tatooine \n 9 Biggs Da…    183    84 light      brown           24   male  mascu… Tatooine \n10 Obi-Wan …    182    77 fair       blue-gray       57   male  mascu… Stewjon  \n# ℹ 77 more rows\n# ℹ 4 more variables: species <chr>, films <list>, vehicles <list>,\n#   starships <list>\n```\n\n\n:::\n:::\n\n\n## select - Exercise 4 {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nselect(starwars, hair_color, skin_color, eye_color)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 × 3\n   hair_color    skin_color  eye_color\n   <chr>         <chr>       <chr>    \n 1 blond         fair        blue     \n 2 <NA>          gold        yellow   \n 3 <NA>          white, blue red      \n 4 none          white       yellow   \n 5 brown         light       brown    \n 6 brown, grey   light       blue     \n 7 brown         light       blue     \n 8 <NA>          white, red  red      \n 9 black         light       brown    \n10 auburn, white fair        blue-gray\n# ℹ 77 more rows\n```\n\n\n:::\n:::\n\n\n## select - Exercise 4 {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\n# select variables `hair_color` through `eye_color`\nselect(starwars, hair_color:eye_color)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 × 3\n   hair_color    skin_color  eye_color\n   <chr>         <chr>       <chr>    \n 1 blond         fair        blue     \n 2 <NA>          gold        yellow   \n 3 <NA>          white, blue red      \n 4 none          white       yellow   \n 5 brown         light       brown    \n 6 brown, grey   light       blue     \n 7 brown         light       blue     \n 8 <NA>          white, red  red      \n 9 black         light       brown    \n10 auburn, white fair        blue-gray\n# ℹ 77 more rows\n```\n\n\n:::\n:::\n\n\n## select - Exercise 4 {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\n# drop variables `hair_color` through `eye_color`\nselect(starwars, !(hair_color:eye_color))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 × 11\n   name    height  mass birth_year sex   gender homeworld species films vehicles\n   <chr>    <int> <dbl>      <dbl> <chr> <chr>  <chr>     <chr>   <lis> <list>  \n 1 Luke S…    172    77       19   male  mascu… Tatooine  Human   <chr> <chr>   \n 2 C-3PO      167    75      112   none  mascu… Tatooine  Droid   <chr> <chr>   \n 3 R2-D2       96    32       33   none  mascu… Naboo     Droid   <chr> <chr>   \n 4 Darth …    202   136       41.9 male  mascu… Tatooine  Human   <chr> <chr>   \n 5 Leia O…    150    49       19   fema… femin… Alderaan  Human   <chr> <chr>   \n 6 Owen L…    178   120       52   male  mascu… Tatooine  Human   <chr> <chr>   \n 7 Beru W…    165    75       47   fema… femin… Tatooine  Human   <chr> <chr>   \n 8 R5-D4       97    32       NA   none  mascu… Tatooine  Droid   <chr> <chr>   \n 9 Biggs …    183    84       24   male  mascu… Tatooine  Human   <chr> <chr>   \n10 Obi-Wa…    182    77       57   male  mascu… Stewjon   Human   <chr> <chr>   \n# ℹ 77 more rows\n# ℹ 1 more variable: starships <list>\n```\n\n\n:::\n:::\n\n\n## select - Exercise 4 {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\n# `starts_with`, `ends_with`, `contains`\nselect(starwars, ends_with(\"color\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 × 3\n   hair_color    skin_color  eye_color\n   <chr>         <chr>       <chr>    \n 1 blond         fair        blue     \n 2 <NA>          gold        yellow   \n 3 <NA>          white, blue red      \n 4 none          white       yellow   \n 5 brown         light       brown    \n 6 brown, grey   light       blue     \n 7 brown         light       blue     \n 8 <NA>          white, red  red      \n 9 black         light       brown    \n10 auburn, white fair        blue-gray\n# ℹ 77 more rows\n```\n\n\n:::\n:::\n\n\n## mutate - Syntax\n\n- `mutate()` to compute new columns\n\n![](../img/dplyr/mutate.png)\n\n---\n\n```r\nmutate(data = ..., <newcolname> =  funs(<oldcolname>))\nmutate(data = ..., <colname>, funs(x))\n```\n\n. . .\n\nor with the the pipe `|>`\n\nUseful when multiple functions act sequentially on a dataframe.\n\n```r\ndata |>\n  mutate(<colname>, funs(x))\n```\n\n## mutate (& pipe |>)- Exercise 5 {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\n# create a new column to display height in meters\nmutate(starwars, height_m = height / 100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 × 15\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 <NA>       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 <NA>       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 <NA>       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 6 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>, height_m <dbl>\n```\n\n\n:::\n:::\n\n\n## mutate (& pipe |>)- Exercise 5 {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\n# using the pipe to feed data into multiple functions sequentially\nstarwars |>\n  mutate(height_m = height / 100) |>\n  select(name, height_m, height, everything())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 × 15\n   name   height_m height  mass hair_color skin_color eye_color birth_year sex  \n   <chr>     <dbl>  <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr>\n 1 Luke …     1.72    172    77 blond      fair       blue            19   male \n 2 C-3PO      1.67    167    75 <NA>       gold       yellow         112   none \n 3 R2-D2      0.96     96    32 <NA>       white, bl… red             33   none \n 4 Darth…     2.02    202   136 none       white      yellow          41.9 male \n 5 Leia …     1.5     150    49 brown      light      brown           19   fema…\n 6 Owen …     1.78    178   120 brown, gr… light      blue            52   male \n 7 Beru …     1.65    165    75 brown      light      blue            47   fema…\n 8 R5-D4      0.97     97    32 <NA>       white, red red             NA   none \n 9 Biggs…     1.83    183    84 black      light      brown           24   male \n10 Obi-W…     1.82    182    77 auburn, w… fair       blue-gray       57   male \n# ℹ 77 more rows\n# ℹ 6 more variables: gender <chr>, homeworld <chr>, species <chr>,\n#   films <list>, vehicles <list>, starships <list>\n```\n\n\n:::\n:::\n\n\n## mutate (& pipe |>)- Exercise 5 {.smaller}\n\nMutate allows you to refer to columns that you’ve just created\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nstarwars |>\n  mutate(\n    height_m = height / 100,\n    BMI = mass / (height_m^2)\n  ) |>\n  select(name, BMI, everything())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 × 16\n   name        BMI height  mass hair_color skin_color eye_color birth_year sex  \n   <chr>     <dbl>  <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr>\n 1 Luke Sky…  26.0    172    77 blond      fair       blue            19   male \n 2 C-3PO      26.9    167    75 <NA>       gold       yellow         112   none \n 3 R2-D2      34.7     96    32 <NA>       white, bl… red             33   none \n 4 Darth Va…  33.3    202   136 none       white      yellow          41.9 male \n 5 Leia Org…  21.8    150    49 brown      light      brown           19   fema…\n 6 Owen Lars  37.9    178   120 brown, gr… light      blue            52   male \n 7 Beru Whi…  27.5    165    75 brown      light      blue            47   fema…\n 8 R5-D4      34.0     97    32 <NA>       white, red red             NA   none \n 9 Biggs Da…  25.1    183    84 black      light      brown           24   male \n10 Obi-Wan …  23.2    182    77 auburn, w… fair       blue-gray       57   male \n# ℹ 77 more rows\n# ℹ 7 more variables: gender <chr>, homeworld <chr>, species <chr>,\n#   films <list>, vehicles <list>, starships <list>, height_m <dbl>\n```\n\n\n:::\n:::\n\n\n---\n\nOutput needs to be saved into a new data frame since dplyr does not \"change\" the original dataframe.\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nstarwars_bmi <- starwars |>\n  mutate(\n    height_m = height / 100,\n    BMI = mass / (height_m^2)\n  ) |>\n  select(name, BMI, everything())\n```\n:::\n\n\n---\n\n## `count()` - Count observations\n\n`count()` is a shortcut for `group_by()` + `summarise()` + `n()`.\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n# Count observations by species\nstarwars |>\n  count(species)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 38 × 2\n   species       n\n   <chr>     <int>\n 1 Aleena        1\n 2 Besalisk      1\n 3 Cerean        1\n 4 Chagrian      1\n 5 Clawdite      1\n 6 Droid         6\n 7 Dug           1\n 8 Ewok          1\n 9 Geonosian     1\n10 Gungan        3\n# ℹ 28 more rows\n```\n\n\n:::\n:::\n\n\n---\n\nSort counts with `sort = TRUE`\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n# Most common species first\nstarwars |>\n  count(species, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 38 × 2\n   species      n\n   <chr>    <int>\n 1 Human       35\n 2 Droid        6\n 3 <NA>         4\n 4 Gungan       3\n 5 Kaminoan     2\n 6 Mirialan     2\n 7 Twi'lek      2\n 8 Wookiee      2\n 9 Zabrak       2\n10 Aleena       1\n# ℹ 28 more rows\n```\n\n\n:::\n:::\n\n\n---\n\nCount by multiple variables\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n# Count by species and gender\nstarwars |>\n  count(species, gender, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 42 × 3\n   species  gender        n\n   <chr>    <chr>     <int>\n 1 Human    masculine    26\n 2 Human    feminine      9\n 3 Droid    masculine     5\n 4 <NA>     <NA>          4\n 5 Gungan   masculine     3\n 6 Mirialan feminine      2\n 7 Wookiee  masculine     2\n 8 Zabrak   masculine     2\n 9 Aleena   masculine     1\n10 Besalisk masculine     1\n# ℹ 32 more rows\n```\n\n\n:::\n:::\n\n\n---\n\n`count()` is equivalent to this longer approach:\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n# The long way\nstarwars |>\n  group_by(species) |>\n  summarise(n = n()) |>\n  arrange(desc(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 38 × 2\n   species      n\n   <chr>    <int>\n 1 Human       35\n 2 Droid        6\n 3 <NA>         4\n 4 Gungan       3\n 5 Kaminoan     2\n 6 Mirialan     2\n 7 Twi'lek      2\n 8 Wookiee      2\n 9 Zabrak       2\n10 Aleena       1\n# ℹ 28 more rows\n```\n\n\n:::\n:::\n\n\n## Complex conditional logic with `case_when()`\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nstarwars |>\n  mutate(\n    size_description = case_when(\n      height < 100 ~ \"very short\",\n      height < 150 ~ \"short\",\n      height < 200 ~ \"average\",\n      height >= 200 ~ \"tall\",\n      .default = \"unknown\"\n    )\n  ) |>\n  count(size_description)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  size_description     n\n  <chr>            <int>\n1 average             60\n2 short                3\n3 tall                11\n4 unknown              6\n5 very short           7\n```\n\n\n:::\n:::\n\n\n---\n\nMultiple conditions with `case_when()`\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nstarwars |>\n  mutate(\n    character_type = case_when(\n      species == \"Human\" & homeworld == \"Tatooine\" ~ \"Tatooine Human\",\n      species == \"Human\" ~ \"Other Human\",\n      mass > 100 ~ \"Heavy non-human\",\n      height > 180 ~ \"Tall non-human\",\n      .default = \"Standard character\"\n    )\n  ) |>\n  count(character_type, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  character_type         n\n  <chr>              <int>\n1 Other Human           27\n2 Standard character    26\n3 Tall non-human        18\n4 Heavy non-human        8\n5 Tatooine Human         8\n```\n\n\n:::\n:::\n\n\n## `group_by()` & `summarise()` - Exercise 6\n\n`group_by` creates a grouped copy of a table.\n\n* This changes the unit of analysis from the complete data set to individual groups.\n* dplyr verbs automatically detect grouped tables and calculate \"by group\".\n\n. . .\n\n```r\ngroup_by(data = ..., <colname>)\n```\n\n## group_by - Syntax\n\n* `group_by()` creates a grouped tibble.\n* This changes the unit of analysis from the complete dataset to individual groups.\n* Then, when you use the dplyr verbs on a grouped data frame they'll be automatically applied \"by group\".\n\n. . .\n\n```r\ngroup_by(data = ..., <colname>)\n```\n\n## group_by + summarize - Exercise 7 {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nstarwars |>\n  group_by(species)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 × 14\n# Groups:   species [38]\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 <NA>       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 <NA>       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 <NA>       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n```\n\n\n:::\n:::\n\n\n## summarize - syntax\n\n* `summarize()` takes named expressions and calculates a summary based on group.\n\n. . .\n\n```r\nsummarize(data = ..., name = expression)\n```\n\n## Calculate a summary statistic *by species* {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nstarwars |>\n  group_by(species) |>\n  summarise(\n    height = mean(height, na.rm = TRUE)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 38 × 2\n   species   height\n   <chr>      <dbl>\n 1 Aleena       79 \n 2 Besalisk    198 \n 3 Cerean      198 \n 4 Chagrian    196 \n 5 Clawdite    168 \n 6 Droid       131.\n 7 Dug         112 \n 8 Ewok         88 \n 9 Geonosian   183 \n10 Gungan      209.\n# ℹ 28 more rows\n```\n\n\n:::\n:::\n\n\n---\n\nCalucate multiple summary statistics.\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nstarwars |>\n  group_by(species, gender) |>\n  summarise(\n    height = mean(height, na.rm = TRUE),\n    mass = mean(mass, na.rm = TRUE)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 42 × 4\n# Groups:   species [38]\n   species   gender    height  mass\n   <chr>     <chr>      <dbl> <dbl>\n 1 Aleena    masculine     79  15  \n 2 Besalisk  masculine    198 102  \n 3 Cerean    masculine    198  82  \n 4 Chagrian  masculine    196 NaN  \n 5 Clawdite  feminine     168  55  \n 6 Droid     feminine      96 NaN  \n 7 Droid     masculine    140  69.8\n 8 Dug       masculine    112  40  \n 9 Ewok      masculine     88  20  \n10 Geonosian masculine    183  80  \n# ℹ 32 more rows\n```\n\n\n:::\n:::\n\n\n## `across()` - Apply functions to multiple columns\n\n`across()` allows you to apply the same operations to multiple columns efficiently.\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n# Apply mean to multiple numeric columns\nstarwars |>\n  group_by(species) |>\n  summarise(\n    across(\n      c(height, mass),\n      \\(x) mean(x, na.rm = TRUE)\n    )\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 38 × 3\n   species   height  mass\n   <chr>      <dbl> <dbl>\n 1 Aleena       79   15  \n 2 Besalisk    198  102  \n 3 Cerean      198   82  \n 4 Chagrian    196  NaN  \n 5 Clawdite    168   55  \n 6 Droid       131.  69.8\n 7 Dug         112   40  \n 8 Ewok         88   20  \n 9 Geonosian   183   80  \n10 Gungan      209.  74  \n# ℹ 28 more rows\n```\n\n\n:::\n:::\n\n",
    "supporting": [
      "slides-03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}