{
  "hash": "fdf2caf3cba4b722b1e9c81d1ac7dd64",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"DNA Block - Problem Set 17\"\nformat:\n  html:\n    code-fold: true\n    embed-resources: true\n---\n\n## Problem Set\n\nYou have two tasks for this problem set.\n\nEach problem below is worth **20 points**.\n\n## Setup\n\nLoad libraries you'll need for analysis below. You'll need the `tidyverse` and `valr` packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required libraries\n```\n:::\n\n\n## Question 1 -- 5 points\n\nWe'll work with a few different files for the next questions.\n\n- `hg19.refGene.chr22.bed.gz` is a BED12 file containing RefSeq gene (mRNA) information for chr22.\n- `hg19.rmsk.chr22.bed.gz` is a BED6 containing repetitive elements in the human genome.\n- `hg19.dnase1.bw` is a bigWig file containing DNaseI signal.\n\nYou can find the path to each with `valr_example()`. Load each one individually using the `read_*` functions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the three data files\n```\n:::\n\n\nSome valr functions require a \"genome\" file, which is just a tibble of chromosome names and sizes.\n\nThe hg19 genome file is available at `valr_example(\"hg19.chrom.sizes.gz\")`. Use `read_genome()` to load it.\n\nInspect the genome tibble. How many columns does it have? What is the largest chromosome?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load genome file and find the largest chromosome\n```\n:::\n\n\n**Answers:**\n\nThere are **___** columns in the genome tibble and the largest chromosome is **___**.\n\n## Question 2 -- 5 points\n\nWhich repeat class covers the largest amount of chromosome 22? You\nneed to calculate the sum of the sizes of all intervals in each repeat class.\n\nA common pattern for this is e.g. `arrange(desc(size))` + `pull(name)` + `head(1)`.\n\nYou could also use `slice_max(size, n = 1))` + `pull(name)`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate total coverage by repeat class and find the highest\n```\n:::\n\n\n**Answer:**\n\nThe repeat class with the highest coverage is _____.\n\n## Question 3\n\nWhich promoter has the highest DNase I accessibility?\n\n1. Use the `create_tss()` function to generate transcription start sites from\n   the refGene annotations. How big are these intervals?\n\n2. Generate promoter regions with `bed_slop()`, adding 500 bp up- and downstream\n   of the TSS. `bed_slop()` requires the genome file above.\n\n3. Use `bed_map()` to calculate the total (i.e., summed) DNase I signal in the\n   promoters (the `score` column in the DNase file).\n\nWhich gene has the highest DNase I in the region you defined above?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create TSS, generate promoter regions, and calculate DNase I signal\n```\n:::\n\n\n**Answer:**\n\nThe gene with the highest DNase I signal in its promoter is _____.\n\n## Question 4\n\n**Is DNase I accessibility in promoters significantly higher than expected by chance?**\n\n1. Calculate the mean DNase I signal across all promoters from **Question 3**.\n\n1. Use `bed_shuffle()` to generate 1000 random intervals of the same size as your promoters.\n   You'll need to provide the genome file and `set.seed(42)` for reproducibility.\n\n1. Use `bed_map()` to calculate DNase I signal in these random regions.\n\n1. Calculate what fraction of random regions have mean DNase I signal greater than\n   or equal to your observed promoter mean. This is your empirical p-value.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate observed mean and perform permutation test\n```\n:::\n\n\n**Answer:**\n\nThe observed mean DNase I signal in promoters is _____, the mean of random signals is _____, and the empirical p-value is _____, so DNase I accessibility in promoters is _____.\n\n## Submit\n\nBe sure to click the \"Render\" button to render the HTML output.\n\nThen paste the URL of this Posit Cloud project into the problem set on Canvas.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}