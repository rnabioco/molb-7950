{
  "hash": "035ec3258bca95f82aa537db27e4ae96",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"RNA Block - Problem Set 24\"\n---\n\n## Problem Set\n\nTotal points: 20. Q1 - 10 pts, Q2,3 - 5 points each.\n\n1. Perform differential expression analysis comparing DIV28 vs DIV0 (10 pts)\n\n2. Are axonogenesis and cell cycle genes significantly differentially expressed? If so, in what direction (up/down-regulated)?  (5 pts)\n\n3. Perform GSEA analysis using the Hallmark gene set. Make enrichment plot of `HALLMARK_G2M_CHECKPOINT` geneset.  (5 pts)\n\n\n## Load libraries and generate gene information files (0 pts)\n\nMake sure to run the code chunk below to load required libraries and generate `t2g` (file for `tximport`) and gene id to symbol mapping file.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(biomaRt)\nlibrary(tximport)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n✖ dplyr::select() masks biomaRt::select()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(DESeq2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\nLoading required package: generics\n\nAttaching package: 'generics'\n\nThe following object is masked from 'package:lubridate':\n\n    as.difftime\n\nThe following object is masked from 'package:dplyr':\n\n    explain\n\nThe following objects are masked from 'package:base':\n\n    as.difftime, as.factor, as.ordered, intersect, is.element, setdiff,\n    setequal, union\n\n\nAttaching package: 'BiocGenerics'\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n    get, grep, grepl, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, saveRDS, table, tapply, unique,\n    unsplit, which.max, which.min\n\n\nAttaching package: 'S4Vectors'\n\nThe following objects are masked from 'package:lubridate':\n\n    second, second<-\n\nThe following objects are masked from 'package:dplyr':\n\n    first, rename\n\nThe following object is masked from 'package:tidyr':\n\n    expand\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\nLoading required package: IRanges\n\nAttaching package: 'IRanges'\n\nThe following object is masked from 'package:lubridate':\n\n    %within%\n\nThe following objects are masked from 'package:dplyr':\n\n    collapse, desc, slice\n\nThe following object is masked from 'package:purrr':\n\n    reduce\n\nLoading required package: GenomicRanges\nLoading required package: GenomeInfoDb\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: 'matrixStats'\n\nThe following object is masked from 'package:dplyr':\n\n    count\n\n\nAttaching package: 'MatrixGenerics'\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: 'Biobase'\n\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggrepel)\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nhere() starts at /Users/jayhesselberth/devel/rnabioco/molb-7950\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(cowplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'cowplot'\n\nThe following object is masked from 'package:lubridate':\n\n    stamp\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(rstatix)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'rstatix'\n\nThe following object is masked from 'package:IRanges':\n\n    desc\n\nThe following object is masked from 'package:biomaRt':\n\n    select\n\nThe following object is masked from 'package:stats':\n\n    filter\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(clusterProfiler)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nclusterProfiler v4.16.0 Learn more at https://yulab-smu.top/contribution-knowledge-mining/\n\nPlease cite:\n\nT Wu, E Hu, S Xu, M Chen, P Guo, Z Dai, T Feng, L Zhou, W Tang, L Zhan,\nX Fu, S Liu, X Bo, and G Yu. clusterProfiler 4.0: A universal\nenrichment tool for interpreting omics data. The Innovation. 2021,\n2(3):100141\n\nAttaching package: 'clusterProfiler'\n\nThe following object is masked from 'package:IRanges':\n\n    slice\n\nThe following object is masked from 'package:S4Vectors':\n\n    rename\n\nThe following object is masked from 'package:purrr':\n\n    simplify\n\nThe following object is masked from 'package:biomaRt':\n\n    select\n\nThe following object is masked from 'package:stats':\n\n    filter\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(enrichplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nenrichplot v1.28.4 Learn more at https://yulab-smu.top/contribution-knowledge-mining/\n\nPlease cite:\n\nT Wu, E Hu, S Xu, M Chen, P Guo, Z Dai, T Feng, L Zhou, W Tang, L Zhan,\nX Fu, S Liu, X Bo, and G Yu. clusterProfiler 4.0: A universal\nenrichment tool for interpreting omics data. The Innovation. 2021,\n2(3):100141\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(msigdbr)\n# run the code below to generate t2g file and gene id-symbol mapping file\nmart <- biomaRt::useMart(\n  \"ENSEMBL_MART_ENSEMBL\",\n  dataset = \"mmusculus_gene_ensembl\"\n)\n\nt2g <- biomaRt::getBM(\n  attributes = c(\n    \"ensembl_transcript_id\",\n    \"ensembl_gene_id\",\n    \"external_gene_name\"\n  ),\n  mart = mart\n) |>\n  as_tibble()\n\n# maps systematic to common gene names\ngene_name_map <- t2g |>\n  dplyr::select(-ensembl_transcript_id) |>\n  unique()\n```\n:::\n\n\n\n## Q1 Perform differential expression analysis comparing DIV28 vs DIV0\n\n### Prepare `metadata` and use `tximport` {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmetadata <- data.frame(\n  sample_id = list.files(here(\"??\"),\n                         pattern = \"^DIV\"),\n  salmon_dirs = list.files(here(\"??\"),\n                           recursive = ??,\n                           pattern = \"quant.sf\",\n                           full.names = ??)\n  ) |>\n  separate(col = sample_id, into = c(\"timepoint\",\"rep\"), sep = \"\\\\.\", remove = F)\n\nmetadata$rep <- gsub(pattern = \"Rep\", replacement = \"\", metadata$rep) \n\nrownames(metadata) <- metadata$sample_id\n\nmetadata <- metadata |> \n  filter(timepoint %in% c(\"??\",\"??\")) \n\nsalmdir <- metadata$salmon_dirs\nnames(salmdir) <- metadata$sample_id\n\ntxi <- tximport(\n  files = salmdir,\n  type = \"salmon\",\n  tx2gene = t2g,\n  dropInfReps = TRUE,\n  countsFromAbundance = \"lengthScaledTPM\"\n)\n```\n:::\n\n\n### Filter genes and perform `DESeq2` {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# examine distribution of TPMs\nhist(log2(1 + rowSums(txi$??)), breaks = 40)\n\n# decide a cutoff\nkeepG <- txi$abundance[log2(1 + rowSums(txi$abundance)) > ??,] |>\n  rownames()\n\nddsTxi <- DESeqDataSetFromTximport(\n  ??,\n  colData = metadata,\n  design = ~??\n)\n\n# keep genes with sufficient expession\nddsTxi <- ??\n\n# run DESeq2\ndds <- ??\n\n# create a dataframe containing results and join w/gene symbols\ndiff <-\n  results(\n    dds,\n    contrast = c(\"timepoint\", \"??\", \"??\")\n  ) |>\n  # Change this into a dataframe\n  as.data.frame() |>\n  # Move ensembl gene IDs into their own column\n  rownames_to_column(var = \"ensembl_gene_id\") |>\n  # drop unused columns\n  dplyr::select(-c(baseMean, lfcSE, stat, pvalue)) |>\n  # Merge this with a table relating ensembl_gene_id with gene short names\n  inner_join(gene_name_map) |>\n  # Rename external_gene_name column\n  dplyr::rename(gene = external_gene_name) |>\n  as_tibble()\n```\n:::\n\n\n## Q2. Are axonogenesis and cell cycle genes significantly differentially expressed? If so, in what direction (up/down-regulated)?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncellcyclegenes <- ??(\n  attributes = c(\"ensembl_gene_id\"),\n  filters = c(\"go_parent_term\"),\n  values = c(\"GO:0045787\"),\n  mart = mart\n)\n\n\naxongenes <- ??(\n  attributes = c(\"ensembl_gene_id\"),\n  filters = c(\"go_parent_term\"),\n  values = c(\"GO:0007409\"),\n  mart = mart\n)\n\ndiff_paths <-\n  diff |>\n  mutate(\n    annot = case_when(\n      ensembl_gene_id %in% axongenes$ensembl_gene_id ~ \"??\",\n      ensembl_gene_id %in% cellcyclegenes$ensembl_gene_id ~ \"??\",\n      .default = \"none\"\n    )\n  ) |>\n  drop_na() # drop na\n\n# Reorder these for plotting purposes\ndiff_paths$annot <-\n  factor(\n    diff_paths$annot,\n    levels = c(\"none\",\n               \"axonogenesis\",\n               \"cellcycle\")\n  )\n\n# calculate and report p-value using wilcox test\npvals <- wilcox_test(data = diff_paths,\n                     ?? ~ ??,\n                     ref.group = \"??\")\n\n# make a plot of the LFC (y-axis) ~ pathways (x-axis)\nggplot(\n  diff_paths,\n  aes(\n    x = ??,\n    y = ??,\n    fill = ??\n  )\n) +\n  labs(\n    x = \"Gene class\",\n    y = \"DIV28/DIV0, log2\"\n  ) +\n  geom_hline(\n    yintercept = 0,\n    color = \"gray\",\n    linetype = \"dashed\"\n  ) +\n  geom_boxplot(\n    notch = TRUE,\n    outlier.shape = NA\n  ) +\n  ylim(-5,5) +\n  theme_cowplot() \n```\n:::\n\n\n\n\n## Q3. Perform GSEA analysis using the Hallmark gene set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# retrieve mouse hallmark gene set from msigdb\nmouse_hallmark <- msigdbr(species = \"??\") %>%\n  filter(gs_cat == \"??\") %>% \n  dplyr::select(gs_name, gene_symbol)\n\n\n# create a list of gene LFCs\nrankedgenes <- diff %>% pull(??)\n\n# add symbols as names of the list\nnames(rankedgenes) <- diff$??\n\n# sort by LFC\nrankedgenes <- sort(??, decreasing = TRUE)\n\n# deduplicate\nrankedgenes <- rankedgenes[!duplicated(names(rankedgenes))]\n\n\n# run gsea\n?? <- GSEA(geneList = ??,\n                      eps = 0,\n                     pAdjustMethod = \"fdr\",\n                     pvalueCutoff = .05,\n                     minGSSize = 20,\n                     maxGSSize = 1000,\n                     TERM2GENE = ??)\n\n\n# plot \"HALLMARK_G2M_CHECKPOINT\"\ngseaplot(x = ??, geneSetID = \"??\")\n```\n:::\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}