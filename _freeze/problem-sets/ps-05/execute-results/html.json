{
  "hash": "d64e884d1dabe477ae47beae5125ea71",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"R Bootcamp - Problem Set 5 (Extreme aRt)\"\nformat:\n  html:\n    code-fold: true\n---\n\n\n\n## Extreme aRt --- Objective\n\nYour objective is to create some new *extreme* art using R, something either ugly or sublime. What you *cannot* do is be boring; your goal is to stay on the fringe.\n\n**Your submission (a Quarto .qmd file) is due Tues Sept 2 by 5pm**. If you submit an entry, you get full credit on the problem set. Entries will be anonymized and winners will selected by popular vote.\n\n## Favorite Rtists\n\nHere are some of my favorite generative artists who use R. Be inspired!\n\n-   Danielle Navarro [[Art]](https://art.djnavarro.net/) [[Github]](https://github.com/djnavarro)\n-   Ijeamaka Anyene [[Github]](https://github.com/Ijeamakaanyene) and [this study](https://ijeamakaanyene.github.io/patterns/zine/zine_radial_patterns.html#1) in particular.\n-   Claus Wilke [[Art]](https://clauswilke.com/art/) [[Github]](https://github.com/clauswilke), a biologist at UT Austin who also wrote [the book on data visualization](https://clauswilke.com/dataviz/) (it's excellent).\n-   Thomas Lin Pederesen [[Art]](https://www.data-imaginist.com/art) [[Github](https://github.com/thomasp85)]. I have some of his pieces in my office.\n-   inconvergent [[Art]](https://img.inconvergent.net/plot/) [[Github]](https://github.com/inconvergent/weird). It's lisp, not R. But it's so good.\n\nThere are several resources for color palettes, an important component of any hideous or beautiful creation.\n\n-   The section in [Data Viz for R on color](https://clauswilke.com/dataviz/color-basics.html) is worth a read.\n-   The colors in e.g. `scale_color_brewer` come from [Cynthia Brewer](https://en.wikipedia.org/wiki/Cynthia_Brewer), a cartographer who makes [visually informative maps](https://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3).\n-   [color-hex](https://www.color-hex.com/color-palettes/) has collections of complementary color palettes.\n\nThere are also several R packages that might help you build Rtistic plots.\n\n- [gganimate](https://gganimate.com/) provides tools to bring your plots to life.\n- [ggforce](https://ggforce.data-imaginist.com/) provides interesting geoms that build on ggplot2.\n- [patchwork](https://github.com/thomasp85/patchwork) provides layout functions for plots.\n\n## Informative, but boring.\n\nThis is an informative but relatively boring plot. **NOT THE GOAL HERE.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(cowplot)\n\npenguins_clean <- drop_na(penguins)\n\nggplot(\n  penguins_clean,\n  aes(\n    x = body_mass_g / 1000,\n    y = bill_length_mm\n  )\n) +\n  geom_point(\n    aes(\n      shape = sex,\n      color = species\n    )\n  ) +\n  facet_grid(~island) +\n  theme_minimal_grid() +\n  scale_color_brewer(palette = \"Dark2\") +\n  labs(\n    title = \"Analysis of geographic isolation on penguin phenotypes\",\n    x = \"Body mass (kg)\",\n    y = \"Bill length (mm)\"\n  )\n```\n\n::: {.cell-output-display}\n![](ps-05_files/figure-html/ok-1.png){fig-alt='Description of the plot - PLEASE FILL IN' width=672}\n:::\n:::\n\n\n## Ugly Plots\n\nYikes. We can thank [Yunus Ozekin](https://twitter.com/yozekin) for this abomination.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ntitanic_tbl <- as_tibble(Titanic)\n\nggplot(\n  titanic_tbl,\n  aes(\n    x = Survived,\n    y = n,\n    color = Class,\n    shape = Sex,\n    size = 6\n  )\n) +\n  geom_jitter() +\n  scale_y_sqrt() +\n  labs(\n    x = \"Not Dead?\",\n    y = \"How many? (ppl)\",\n    title = \"WhO dIEd In titaNic?\",\n    caption = \"Some lived, some died.\"\n  ) +\n  scale_x_discrete(position = \"top\") +\n  theme(\n    axis.text.x = element_text(\n      face = \"bold.italic\",\n      color = \"#993333\",\n      size = 18,\n      angle = 180\n    ),\n    axis.text.y = element_text(\n      face = \"bold\",\n      color = \"orange\",\n      size = 18,\n      angle = 135\n    ),\n    plot.background = element_rect(fill = \"darkblue\"),\n    plot.title = element_text(\n      face = \"italic\",\n      color = \"green\",\n      size = 48,\n      angle = 183\n    ),\n    plot.caption = element_text(color = \"white\", size = 22),\n    axis.title.x = element_text(size = 22, color = \"pink\", angle = 12),\n    axis.title.y = element_text(color = \"yellow\", angle = 273, size = 17),\n    legend.background = element_rect(fill = \"yellow\"),\n    legend.title = element_text(\n      angle = 71,\n      face = \"bold\",\n      color = \"purple\",\n      size = 12\n    ),\n    legend.key = element_rect(color = \"green\", fill = \"orange\"),\n    legend.text = element_text(color = \"red\", size = 14),\n    panel.background = element_rect(fill = \"yellow\"),\n    panel.grid.major.y = element_line(\n      color = \"green\",\n      linetype = \"dotdash\",\n      linewidth = 1.2\n    ),\n    panel.grid.major.x = element_line(\n      color = \"purple\",\n      linewidth = 3,\n      linetype = \"twodash\"\n    ),\n    panel.grid.minor = element_line(\n      color = \"red\",\n      linewidth = 2,\n      linetype = \"dashed\"\n    ),\n    legend.position = \"bottom\"\n  )\n```\n\n::: {.cell-output-display}\n![](ps-05_files/figure-html/yikes_ozekin-1.png){fig-alt='Description of the plot - PLEASE FILL IN' width=672}\n:::\n:::\n\n\n## Beautiful Plots\n\nThis is a piece from Ijeamaka Anyene's ode to `coord_polar()` (link above). Reminds me of Miro.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\napply_pattern_theme <- function(bg_hex, caption_hex) {\n  theme(\n    plot.background = element_rect(fill = bg_hex),\n    panel.background = element_rect(fill = bg_hex),\n    panel.grid = element_blank(),\n    plot.caption = element_text(\n      family = \"Open Sans\",\n      size = 6,\n      color = caption_hex\n    ),\n    legend.position = \"none\",\n    axis.title = element_blank(),\n    axis.text = element_blank(),\n    axis.ticks = element_blank()\n  )\n}\n\noutline <- tibble(\n  x = 1,\n  xend = 7,\n  y = 15,\n  yend = 15\n)\nsegment_line <- tibble(\n  x = c(1, 7),\n  xend = c(1, 7),\n  y = c(0, 2),\n  yend = 15\n)\narea <- tibble(\n  x = c(3, 5, 6),\n  y = c(5, 7.5, 2),\n  type = LETTERS[1:3]\n)\npalette_values <- c(\"#2a2640\", \"#a64e46\", \"#f29544\")\nggplot() +\n  geom_col(\n    data = area,\n    aes(x = x, y = y, fill = type),\n    alpha = 0.75,\n    width = 4\n  ) +\n  geom_segment(\n    data = outline,\n    aes(\n      x = x,\n      y = y,\n      xend = xend,\n      yend = yend\n    ),\n    size = 0.5\n  ) +\n  geom_segment(\n    data = segment_line,\n    aes(\n      x = x,\n      xend = xend,\n      y = y,\n      yend = yend\n    ),\n    size = 0.5\n  ) +\n  geom_point(aes(x = 5, y = 0)) +\n  scale_fill_manual(values = palette_values) +\n  scale_y_continuous(limits = c(0, 15)) +\n  scale_x_continuous(limits = c(1, 10)) +\n  coord_polar() +\n  labs(caption = \"Ijeamaka Anyene | @ijeamaka_a\") +\n  apply_pattern_theme(\n    bg_hex = \"#ded5c9\",\n    caption_hex = \"black\"\n  )\n```\n\n::: {.cell-output-display}\n![](ps-05_files/figure-html/anyene-1.png){fig-alt='Description of the plot - PLEASE FILL IN' width=672}\n:::\n:::\n\n\nHere's another more complex geometric creation, again using `coord_polar()`. This will take a few seconds to render.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# https://twitter.com/aschinchon/status/1095057262744387587\nlibrary(tidyverse)\n\nxy <- seq(-2, 2, by = .005)\nexpand.grid(x = xy, y = xy) |>\n  ggplot(\n    aes(\n      x = (cos(x)^2 + sin(y^2)),\n      y = (sin(y)^3 - cos(x^2))\n    )\n  ) +\n  geom_point(alpha = .01, shape = 20, size = 0) +\n  theme_void() +\n  coord_polar()\n```\n\n::: {.cell-output-display}\n![](ps-05_files/figure-html/twitter-1.png){width=672}\n:::\n:::\n\n",
    "supporting": [
      "ps-05_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}