{
  "hash": "aa40a0fdba60fae940fb3103cfb08ebf",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Stats Bootcamp - class 11\"\nsubtitle: \"Distributions and summary stats\"\nauthor: \"Neelanjan Mukherjee\"\neditor: visual\n---\n\n\n\n## Learning objectives\n\n-   Learn types of variables\n\n-   Calculate and visualize summary statistics\n\n-   Properties of data distributions\n\n-   Central limit theorem\n\n## Quantitative Variables\n\n**Discrete variable**: numeric variables that have a countable number of values between any two values - `integer` in R (e.g., number of mice, read counts).\n\n**Continuous variable**: numeric variables that have an infinite number of values between any two values - `numeric` in R (e.g., normalized expression values, fluorescent intensity).\n\n## Categorical Variables\n\n**Nominal variable**: (unordered) random variables have categories where order doesn't matter - `factor` in R (e.g., country, type of gene, genotype).\n\n**Ordinal variable**: (ordered) random variables have ordered categories - order of `levels` in R ( e.g. grade of tumor).\n\n## Distributions and probabilities\n\nA **distribution** in statistics is a function that shows the possible values for a variable and how often they occur.\n\nWe can visualize this with a histogram or density plots as we did earlier.\n\nWe are going to start with simulated data and then use Palmer Penguins later.\n\n## Create a normal distribution {.smaller}\n\nAssume that the test scores of a college entrance exam fits a normal distribution. Furthermore, the mean test score is 76, and the standard deviation is 13.8.\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nd <- tibble(n1=rnorm(n = ??, mean = ??, sd = ??))\n\nhead(d)\n```\n:::\n\n\n## Visualize a normal distribution {.smaller}\n\nfirst we will look at a histogram n1\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = ??,\n       aes(x=??)\n       ) +\n  geom_??() +\n  theme_cowplot()\n```\n:::\n\n\n------------------------------------------------------------------------\n\nnext a density plot\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = d,\n       aes(x=n1)\n       ) +\n  geom_??() +\n  geom_vline(xintercept = ??) + # draw mean\n  theme_cowplot()\n```\n:::\n\n\n## Determine the probability of a given value {.smaller}\n\nProbability is used to estimate how probable a sample is based on a given distribution.\n\nProbability refers to the area under curve (AUC) on the distribution curve. The higher the value, the more probable that the data come from this distribution.\n\nWhat is the probability of students scoring 85 or more in the exam?\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\ns <- 85\npnorm(??, mean=76, sd=13.8, lower.tail = F)\n```\n:::\n\n\n. . .\n\nWhat is the probability of students scoring 85 or less in the exam?\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\npnorm(s, mean=76, sd=13.8, lower.tail = T)\n```\n:::\n\n\n------------------------------------------------------------------------\n\nProb of 85 or more is equivalent to the area under the curve to the right of 85.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d,\n       aes(x=n1)\n       ) +\n  geom_density() +\n  geom_vline(xintercept = s) +\n  theme_cowplot()\n```\n:::\n\n\n## Determine the likelihood of a given value {.smaller}\n\nLikelihood is used to estimate how good a model fits the data. Likelihood refers to a specific point on the distribution curve. The lower the likelihood, the worse the model fits the data.\n\nWhat is the likelihood of students scoring 85 on the exam?\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nl <- dnorm(s, mean=76, sd=13.8)\nl\n```\n:::\n\n\n------------------------------------------------------------------------\n\nThe likelihood is the y-axis value on the curve when th x-axis = 85.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d,\n       aes(x=n1)\n       ) +\n  geom_density() +\n  geom_vline(xintercept = s) +\n  geom_hline(yintercept = l) +\n  theme_cowplot()\n```\n:::\n\n\n## Now to real (messy!) data {.smaller}\n\nWe will use the [Palmer Penguins dataset](https://allisonhorst.github.io/palmerpenguins/)\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\npenguins_raw\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 17\n   studyName `Sample Number` Species         Region Island Stage `Individual ID`\n   <chr>               <dbl> <chr>           <chr>  <chr>  <chr> <chr>          \n 1 PAL0708                 1 Adelie Penguin… Anvers Torge… Adul… N1A1           \n 2 PAL0708                 2 Adelie Penguin… Anvers Torge… Adul… N1A2           \n 3 PAL0708                 3 Adelie Penguin… Anvers Torge… Adul… N2A1           \n 4 PAL0708                 4 Adelie Penguin… Anvers Torge… Adul… N2A2           \n 5 PAL0708                 5 Adelie Penguin… Anvers Torge… Adul… N3A1           \n 6 PAL0708                 6 Adelie Penguin… Anvers Torge… Adul… N3A2           \n 7 PAL0708                 7 Adelie Penguin… Anvers Torge… Adul… N4A1           \n 8 PAL0708                 8 Adelie Penguin… Anvers Torge… Adul… N4A2           \n 9 PAL0708                 9 Adelie Penguin… Anvers Torge… Adul… N5A1           \n10 PAL0708                10 Adelie Penguin… Anvers Torge… Adul… N5A2           \n# ℹ 334 more rows\n# ℹ 10 more variables: `Clutch Completion` <chr>, `Date Egg` <date>,\n#   `Culmen Length (mm)` <dbl>, `Culmen Depth (mm)` <dbl>,\n#   `Flipper Length (mm)` <dbl>, `Body Mass (g)` <dbl>, Sex <chr>,\n#   `Delta 15 N (o/oo)` <dbl>, `Delta 13 C (o/oo)` <dbl>, Comments <chr>\n```\n\n\n:::\n:::\n\n\n. . .\n\nYikes! Some of these column names have horrible formatting e.g. spaces, slashes, parenthesis. These characters can be misinterpreted by R. Also, long/wonky names makes coding annoying.\n\n## Let's tidy the names {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\npenguins_raw |> colnames()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"studyName\"           \"Sample Number\"       \"Species\"            \n [4] \"Region\"              \"Island\"              \"Stage\"              \n [7] \"Individual ID\"       \"Clutch Completion\"   \"Date Egg\"           \n[10] \"Culmen Length (mm)\"  \"Culmen Depth (mm)\"   \"Flipper Length (mm)\"\n[13] \"Body Mass (g)\"       \"Sex\"                 \"Delta 15 N (o/oo)\"  \n[16] \"Delta 13 C (o/oo)\"   \"Comments\"           \n```\n\n\n:::\n:::\n\n\n. . .\n\n[janitor](https://cran.r-project.org/web/packages/janitor/vignettes/janitor.html) package to the rescue.\n\n. . .\n\n\n::: {.cell output-location='fragment'}\n\n:::\n\n\n. . .\n\nCreate a new object `pen` that has nice clean variable names. And get rid of any variable that is the same for all observations (not useful).\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\npen <- penguins_raw |>\n  clean_names() |>\n  janitor::remove_constant()\n```\n:::\n\n\n## Let's inspect the data {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\npen |>\n  str()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [344 × 15] (S3: tbl_df/tbl/data.frame)\n $ study_name       : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ sample_number    : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ species          : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ island           : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ individual_id    : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ clutch_completion: chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ date_egg         : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ culmen_length_mm : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ culmen_depth_mm  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ sex              : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ delta_15_n_o_oo  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ delta_13_c_o_oo  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ comments         : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nLet's select a few of these columns to keep and get rid of `NA`s\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\np <- pen |>\n  select(species, island, culmen_length_mm, flipper_length_mm, body_mass_g, sex) |>\n  drop_na()\n```\n:::\n\n\n. . .\n\nclean species names\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nunique(p$species)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Adelie Penguin (Pygoscelis adeliae)\"      \n[2] \"Gentoo penguin (Pygoscelis papua)\"        \n[3] \"Chinstrap penguin (Pygoscelis antarctica)\"\n```\n\n\n:::\n\n```{.r .cell-code}\np <- p |>\n  mutate(species = str_remove(species, pattern = \" [P|p]en.*\")\n         )\n```\n:::\n\n\n## Visualizing quantitative variables {.smaller}\n\nhistogram of body mass\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = ??,\n       aes(x=??)\n       ) +\n  geom_histogram() +\n  theme_cowplot()\n```\n:::\n\n\n------------------------------------------------------------------------\n\ndensity plot of body mass\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = p,\n       aes(x=body_mass_g)\n       ) +\n  geom_??() +\n  theme_cowplot()\n```\n:::\n\n\n## Visualizing categorical variables {.smaller}\n\nbarplot - 1 category\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = p, aes(x = island, fill = island)) +\n    geom_bar() +\n  theme_cowplot()\n```\n\n::: {.cell-output-display}\n![](ex-11_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n## barplot - categories (island vs sex) {.smaller}\n\nstacked:\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = p, aes(x = island, fill = sex)) +\n  geom_bar() +\n  theme_cowplot()\n```\n\n::: {.cell-output-display}\n![](ex-11_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nproportion\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = p, aes(x = island, fill = sex)) +\n  geom_bar(position = \"fill\") +\n  theme_cowplot()\n```\n\n::: {.cell-output-display}\n![](ex-11_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nper category\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = p, aes(x = island, fill = sex)) +\n  geom_bar(position = \"dodge\") +\n  theme_cowplot()\n```\n\n::: {.cell-output-display}\n![](ex-11_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n## Descriptive statistics for continuous data\n\n-   `n`: \\# observations/individuals or sample size\n\n-   mean ($\\mu$): sum of all observations divided by \\# of observations, $\\mu = \\displaystyle \\frac {\\sum x_i} {n}$\n\n-   median: the \"middle\" value of a data set. Not as sensitive to outliers as the mean.\n\n    ![](https://miro.medium.com/v2/resize:fit:4800/format:webp/0*wHMvuwRa_YF9SFwY.png)\n\n## Descriptive statistics for body weight {.smaller}\n\nLet's look at the distribution again\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = p,\n       aes(x=body_mass_g)\n       ) +\n  geom_density() +\n  theme_cowplot()\n```\n\n::: {.cell-output-display}\n![](ex-11_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n. . .\n\nn\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nlength(p$body_mass_g)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 333\n```\n\n\n:::\n:::\n\n\n. . .\n\nmean\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nmean(p$body_mass_g)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4207.057\n```\n\n\n:::\n:::\n\n\n. . .\n\nmedian\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nmedian(p$body_mass_g)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4050\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nviz mean + median\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = p,\n       aes(x=body_mass_g)\n       ) +\n  geom_density() +\n#  geom_vline() +\n#  geom_vline() +\n  theme_cowplot()\n```\n\n::: {.cell-output-display}\n![](ex-11_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n## Other descriptive statistics {.smaller}\n\nMin: minimum value.\\\nMax: maximum value.\\\nq1, q3: the first and the third quartile, respectively.\\\nIQR: interquartile range measures the spread of the middle half of your data (q3-q1).\n\nQuick way to get all these stats:\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\np |>\n  get_summary_stats(body_mass_g, type = \"common\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 10\n  variable        n   min   max median   iqr  mean    sd    se    ci\n  <fct>       <dbl> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1 body_mass_g   333  2700  6300   4050  1225 4207.  805.  44.1  86.8\n```\n\n\n:::\n:::\n\n\n. . . get mean, median\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\np |>\n  get_summary_stats(body_mass_g,\n                    show = c(\"??\",\"??\")\n                    )\n```\n:::\n\n\n## Statistics describing spread of values\n\nVariance: the average of the squared differences from the mean\n\n$\\sigma^2 = \\displaystyle \\frac {\\sum (x_{i} - \\mu)^2}{n}$\n\nStandard Deviation: square root of the variance\n\n$\\sigma = \\sqrt {\\displaystyle \\frac {\\sum (x_{i} - \\mu)^2}{n}}$\n\n> ```         \n> The variance measures the mathematical dispersion of the data relative to the mean. However, it is more difficult to apply in a real-world sense because the values used to calculate it were squared.\n>\n> The standard deviation, as the square root of the variance, is in the same units as the original values, which makes it much easier to work with and interpret w/respect to the mean.\n> ```\n\n## Other stats describing spread of data\n\nConfidence Interval (**ci**): a range of values that you can be 95% (or x%) certain contains the true population mean. Gets into inferential statistics.\n\n![](https://stats.libretexts.org/@api/deki/files/834/rule.png?revision=1&size=bestfit&width=855&height=369)\n\n## Get more descriptive stats easily {.smaller}\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\np |>\n  get_summary_stats(body_mass_g, show = c(\"mean\",\"median\",\"sd\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 5\n  variable        n  mean median    sd\n  <fct>       <dbl> <dbl>  <dbl> <dbl>\n1 body_mass_g   333 4207.   4050  805.\n```\n\n\n:::\n:::\n\n\n. . .\n\nby species\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\np |>\n  group_by(species) |>\n  get_summary_stats(body_mass_g, show = c(\"mean\",\"median\",\"sd\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 6\n  species   variable        n  mean median    sd\n  <chr>     <fct>       <dbl> <dbl>  <dbl> <dbl>\n1 Adelie    body_mass_g   146 3706.   3700  459.\n2 Chinstrap body_mass_g    68 3733.   3700  384.\n3 Gentoo    body_mass_g   119 5092.   5050  501.\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nby species and island\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\np |>\n  group_by(species,island) |>\n  get_summary_stats(body_mass_g, show = c(\"mean\",\"median\",\"sd\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 7\n  species   island    variable        n  mean median    sd\n  <chr>     <chr>     <fct>       <dbl> <dbl>  <dbl> <dbl>\n1 Adelie    Biscoe    body_mass_g    44 3710.   3750  488.\n2 Adelie    Dream     body_mass_g    55 3701.   3600  449.\n3 Adelie    Torgersen body_mass_g    47 3709.   3700  452.\n4 Chinstrap Dream     body_mass_g    68 3733.   3700  384.\n5 Gentoo    Biscoe    body_mass_g   119 5092.   5050  501.\n```\n\n\n:::\n:::\n\n\n## Normal distribution {.smaller}\n\nThe mean, mode, and median are all equal.\\\n\nThe distribution is symmetric about the mean---half the values fall below the mean and half above the mean.\\\n\nThe distribution can be described by two values: the mean and the standard deviation.\\\n\n![](https://stats.libretexts.org/@api/deki/files/834/rule.png?revision=1&size=bestfit&width=855&height=369)\n\n## **Bell curve or standard normal:** {.smaller}\n\nIs a special normal distribution where the mean is 0 and the standard deviation is 1.\n\n![](/img/bellcurve.jpg)\n\n## Normal distribution metrics\n\nSkewness is a measure of the asymmetry around the mean. 0 for bell curve.\n\n![](https://miro.medium.com/v2/resize:fit:4800/format:webp/0*wHMvuwRa_YF9SFwY.png)\n\n## Normal distribution metrics\n\nKurtosis is a measure of the \"flatness\" of the distribution.\n\n![](https://cdn.analystprep.com/cfa-level-1-exam/wp-content/uploads/2019/08/05085139/page-64.png)\n\n## Is my data normal(ly distributed)? {.smaller}\n\nLet's look at the test score distribution again\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = d,\n       aes(x = n1)) +\n  geom_density() +\n  theme_cowplot()\n```\n:::\n\n\n## QQ-plot {.smaller}\n\nquantile-quantile plot to compare an empirical distribution to a theoretical distribution.\n\nQuantile is the fraction (or percent) of points below the given value. For example, the 0.2 (or 20%) quantile is the point at which 20% percent of the data fall below and 80% fall above that value.\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = d,\n       aes(sample = n1)) +\n  geom_qq() +\n  geom_qq_line() +\n  theme_cowplot()\n```\n:::\n\n\n## Shapiro-Wilk Normality Test {.smaller}\n\nShapiro-Wilk test is a hypothesis test that evaluates whether a data set is normally distributed. /\n\nIt evaluates data from a sample with the null hypothesis that the data set is normally distributed. /\n\nA large p-value indicates the data set is normally distributed, a low p-value indicates that it isn't normally distributed.\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nd |>\n  shapiro_test(n1)\n```\n:::\n\n\n## Back to penguin body mass\n\nDistribution\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = p,\n       aes(x = body_mass_g)) +\n  geom_density() +\n  theme_cowplot()\n```\n\n::: {.cell-output-display}\n![](ex-11_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\n## QQ-plot body mass {.smaller}\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = p,\n       aes(sample = body_mass_g)) +\n  geom_qq() +\n  geom_qq_line() +\n  theme_cowplot()\n```\n\n::: {.cell-output-display}\n![](ex-11_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\nHmmm...\n\n## Shapiro-Wilk body mass {.smaller}\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\np |>\n  shapiro_test(??)\n```\n:::\n\n\nThat does not look normal!\n\n## Penguin body mass by species?\n\nDistribution\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = p,\n       aes(x = body_mass_g, color = species)) +\n  geom_density() +\n  theme_cowplot()\n```\n\n::: {.cell-output-display}\n![](ex-11_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\n## QQ-plot body weight {.smaller}\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = p,\n       aes(sample = body_mass_g, color = species)) +\n  geom_qq() +\n  geom_qq_line() +\n  theme_cowplot()\n```\n\n::: {.cell-output-display}\n![](ex-11_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n\nThat looks better...\n\n## Shapiro-Wilk body weight by species {.smaller}\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\np |>\n  group_by(??) |>\n  shapiro_test(??)\n```\n:::\n\n\nOk so Chinstrap and Gentoo look normal. Not sure about Adelie. We may want to consider using non-parametric test to compare mean body weights between Adelie vs Chinstrap or Gentoo.\n\n## Central limit theorem {.smaller}\n\nThe central limit theorem states that if you take sufficiently large samples from a population, the samples' means will be normally distributed, even if the population isn't normally distributed.\n\nBack to coin flips!! 50 flips, one round.\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nn <- 50\n\n# make a hundred fair and unfair flips\nf <- tibble(fair=rbinom(n = n, size = 1, prob = .5),\n       unfair=rbinom(n = n, size = 1, prob = .2)) |>\n    pivot_longer(cols = c(\"fair\",\"unfair\"), names_to = \"cheating\", values_to = \"flips\")\n```\n:::\n\n\n## flip distributions {.smaller}\n\nLook at the distribution of fair flips\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = f |> filter(cheating==\"fair\"),\n       aes(x=flips)\n       ) +\n  geom_histogram() +\n  theme_cowplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ex-11_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n\nLook at the distribution of unfair flips\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = f |> filter(cheating==\"unfair\"),\n       aes(x=flips)\n       ) +\n  geom_histogram() +\n  theme_cowplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ex-11_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n\n## Now lets sample means {.smaller}\n\nlet's do 100 round of 50 flips and take the average of each round.\n\nremember the `size` that i told you to ignore last class!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nr <- 100\n\nrbinom(n = n, size = r, prob = .5)/r\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 0.54 0.53 0.44 0.57 0.50 0.41 0.56 0.48 0.51 0.63 0.57 0.46 0.57 0.49 0.56\n[16] 0.54 0.51 0.55 0.40 0.44 0.48 0.49 0.49 0.58 0.50 0.47 0.57 0.48 0.60 0.57\n[31] 0.62 0.64 0.48 0.41 0.45 0.45 0.55 0.59 0.49 0.52 0.54 0.51 0.43 0.41 0.54\n[46] 0.56 0.48 0.43 0.47 0.44\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfmean <- tibble(\n  fair=rbinom(n = n, size = r, prob = .5)/r,\n  unfair=rbinom(n = n, size = r, prob = .2)/r) |>\n  pivot_longer(cols = c(\"fair\",\"unfair\"),\n               names_to = \"cheating\",\n               values_to = \"flips\"\n               )\n```\n:::\n\n\n## sampled flip mean distributions {.smaller}\n\nLook at the distribution of fair flips\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = fmean |> filter(cheating==\"fair\"),\n       aes(x=flips)\n       ) +\n  geom_density() +\n  geom_vline(xintercept = .5) +\n  xlim(0,1) +\n  theme_cowplot()\n```\n\n::: {.cell-output-display}\n![](ex-11_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n:::\n\n\nLook at the distribution of unfair flips\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(data = fmean |> filter(cheating==\"unfair\"),\n       aes(x=flips)\n       ) +\n  geom_density() +\n  geom_vline(xintercept = .2) +\n  xlim(0,1) +\n  theme_cowplot()\n```\n\n::: {.cell-output-display}\n![](ex-11_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n\n## but is it normal?\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nfmean |>\n  group_by(cheating) |>\n  shapiro_test(flips)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 4\n  cheating variable statistic     p\n  <chr>    <chr>        <dbl> <dbl>\n1 fair     flips        0.982 0.653\n2 unfair   flips        0.969 0.216\n```\n\n\n:::\n:::\n\n\nyup!\n\n## What about the mean + sd with different parameters? {.smaller}\n\n10 fair and unfair flips\\\n20 and 80 times\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nfair10 <- tibble(\n  r20=rbinom(n = 10, size = 20, prob = .5)/20,\n  r80=rbinom(n = 10, size = 80, prob = .5)/80,\n  type=rep(\"fair10\")\n  )\n```\n:::\n\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nunfair10 <- tibble(\n  r20=rbinom(n = 10, size = 20, prob = .2)/20,\n  r80=rbinom(n = 10, size = 80, prob = .2)/80,\n  type=rep(\"unfair10\")\n  )\n```\n:::\n\n\n------------------------------------------------------------------------\n\nput it all together\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall <- bind_rows(fair10, unfair10) |>\n  pivot_longer(cols = c(\"r20\",\"r80\"),\n             names_to = \"r\",\n             values_to = \"f\"\n             )\n```\n:::\n\n\n## Visualize {.smaller}\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot(all , aes(x=r, y=f, color=r)) +\n  geom_jitter() +\n  stat_summary(fun.y=mean, geom=\"point\", shape=18,\n                 size=3, color=\"black\") +\n  ylim(-0.05,1.05) +\n   facet_grid(~type) +\n  geom_hline(yintercept = .5, linetype = \"dashed\") +\n  geom_hline(yintercept = .2, linetype = \"dashed\") +\n  theme_cowplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ex-11_files/figure-html/unnamed-chunk-53-1.png){width=672}\n:::\n:::\n\n\n. . .\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nall |>\n  group_by(type,r) |>\n  get_summary_stats(show = c(\"mean\",\"sd\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 6\n  type     r     variable     n  mean    sd\n  <chr>    <chr> <fct>    <dbl> <dbl> <dbl>\n1 fair10   r20   f           10 0.565 0.108\n2 fair10   r80   f           10 0.51  0.059\n3 unfair10 r20   f           10 0.165 0.103\n4 unfair10 r80   f           10 0.208 0.051\n```\n\n\n:::\n:::\n\n\n## References\n\n-   [The Normal Distribution, Confidence Intervals, and Their Deceptive Simplicity](https://medium.com/swlh/a-simple-refresher-on-confidence-intervals-1e29a8580697)\n\n-   [Central limit theorem](https://www.scribbr.com/statistics/central-limit-theorem/)\n\n-   [Histograms, Clearly Explained](https://www.youtube.com/watch?v=qBigTkBLU6g)\n\n-   [The Main Ideas behind Probability Distributions](https://www.youtube.com/watch?v=oI3hZJqXJuc)\n\n-   [The Normal Distribution, Clearly Explained!!!](https://www.youtube.com/watch?v=rzFX5NWojp0)\n\n-   [Probability vs Likelihood](https://www.youtube.com/watch?v=pYxNSUDSFH4)\n",
    "supporting": [
      "ex-11_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}