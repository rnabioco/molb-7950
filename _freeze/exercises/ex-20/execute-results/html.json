{
  "hash": "e5211f049067d5b8a126a6577c2baccd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Where do proteins bind in the genome?\"\nauthor: \"{{< var instructor.block.dna >}}\"\ndate: last-modified\n---\n\n## What to map and how to map it?\n\n::: columns\n::: {.column width=\"50%\"}\n**Targets**\n\n-   Transcription factors\n-   Histone modifications\n-   Chromatin remodelers\n-   RNA polymerases\n-   Other factors that bind chromatin\n:::\n\n::: {.column width=\"50%\"}\n**Methods**\n\n-   ChIP-seq\n-   MNase-ChIP-seq\n-   CUT&RUN\n-   CUT&TAG\n:::\n:::\n\n##\n\n![](../img/block-dna/ChIPseq_2.png){fig-align=\"center\"}\n\n##\n\n![](../img/block-dna/ChIP_Data.png){fig-align=\"center\"}\n\n##\n\n![](../img/block-dna/cut-and-run.png){fig-align=\"center\"}\n\n##\n\n![](../img/block-dna/chip-resolution-comparison.png) {fig-align=\"center\"}\n\n## Comparison of factor-centric methods {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n![](../img/block-dna/chip-comparison-overview.png)\n:::\n\n::: {.column width=\"50%\"}\n|     Method     | Resolution | Sequencing cost |\n|:--------------:|:----------:|:---------------:|\n|    ChIP-seq    |    Low     |      High       |\n| MNase-ChIP-seq |    High    |      High       |\n|    CUT&RUN     |    High    |       Low       |\n:::\n:::\n\n# Workflow\n\n### FASTQ files\n\n-   Adapter trimming\n\n-   Aligning to the genome\n\n### Bed files\n\n-   Generate read density genome-wide\n\n### Read density (wig/bedgraph)\n\n-   Call peaks\n\n-   Meta analysis\n\n-   Identify motifs\n\n-   Compare perturbations to control, compare to other datasets\n\n## Example data: CTCF CUT&RUN in K562 cells\n\n![](../img/block-dna/ctcf_cut_run_track.png){fig-align=\"center\" width=\"800\"}\n\n## Example data: CTCF CUT&RUN in K562 cells\n\n![](../img/block-dna/ctcf_cut_run_meta.png){fig-align=\"center\" width=\"106\"}\n\n(from Skene and Henikoff, eLIFE 2017)\n\n## Where do transcription factors bind in the genome?\n\nToday we'll look at where two yeast transcription factors bind in the genome using CUT&RUN.\n\n## Where do transcription factors bind in the genome? {.smaller}\n\nTechniques like CUT&RUN require an affinity reagent (e.g., an antibody) that uniquely recognizes a transcription factor in the cell.\n\n1. Antibody is added to permeabilized cells, and the antibody associates with the epitope.\n1. A separate reagent, a fusion of Protein A (which binds IgG) and micrococcal nuclease (MNase) then associates with the antibody.\n1. Addition of calcium activates MNase, and nearby DNA is digested.\n1. These DNA fragments are then isolated and sequenced to identify sites of TF association in the genome.\n\n## Where do transcription factors bind in the genome?\n\n![Fig 1a, Skene et al.](../img/block-dna/skene-fig-1a.png)\n\n## Data download and pre-processing {.smaller}\n\nCUT&RUN data were downloaded from the [NCBI GEO page](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE84474) for Skene et al.\n\nI selected the 16 second time point for *S. cerevisiae* Abf1 and Reb1 (note the paper combined data from the 1-32 second time points).\n\nBED files containing mapped DNA fragments were separated by size and converted to bigWig with:\n\n``` bash\n# separate fragments by size\nawk '($3 - $2 <= 120)' Abf1.bed > CutRun_Abf1_lt120.bed\nawk '($3 - $2 => 150)' Abf1.bed > CutRun_Abf1_gt150.bed\n\n# for each file with the different sizes\nbedtools genomecov -i Abf1.bed -g sacCer3.chrom.sizes -bg > Abf1.bg\nbedGraphToBigWig Abf1.bg sacCer3.chrom.sizes Abf1.bw\n```\n\nThe bigWig files are available here in the `data/` directory.\n\n## Questions\n\n1.  How do you ensure your antibody recognizes what you think it recognizes? What are important controls for ensuring it recognizes a specific epitope?\n\n2.  What are some good controls for CUT&RUN experiments?\n\n# CUT&RUN analysis\n\n## Set up libraries\n\n\n::: {.cell}\n\n:::\n\n\n## Examine genome coverage\n\n\n::: {.cell}\n\n:::\n\n\n\n## Examine genome coverage {.smaller}\n\n\n::: {.cell}\n\n:::\n\n\n## Examine genome coverage\n\n\n::: {.cell}\n\n:::\n\n\n## Examine genome coverage\nNow that we have tracks loaded, we can make a plot.\n\n\n::: {.cell output-location='slide'}\n\n:::\n\n\n## Questions\n\n1.  What features stand out in the above tracks? What is different between Reb1 and Abf1? Between the short and long fragments?\n\n2.  Where are the major signals with respect to genes?\n\n## Peak calling\n\nA conceptually simple approach to identification of regions containing \"peaks\" where a transcription factor was bound is available in the MACS software ([paper](), [github]()). There's also a nice [blog post](https://hbctraining.github.io/Intro-to-ChIPseq/lessons/05_peak_calling_macs.html) covering the main ideas.\n\n## Theory\n\nThe Poisson distribution is a discrete probability distribution of the form:\n\n$$ P_\\lambda (X=k) = \\frac{ \\lambda^k }{ k! * e^{-\\lambda} } $$\n\nwhere $\\lambda$ captures both the mean and variance of the distribution.\n\nThe R functions `dpois()`, `ppois()`, and `rpois()` provide access to the density, distribution, and random generation for the Poisson distribution.\n\nLook over the `?dpois` documentation.\n\n## Theory\n\n\n::: {.cell}\n\n:::\n\n\n## Practice\n\nHere, we model read coverage using the Poisson distribution. Given some genome size $G$ and and a number of reads collected $N$, we can approximate $\\lambda$ from $N/G$.\n\nMACS uses this value (the \"genomewide\" lambda) and also calculates several \"local\" lambda values to account for variation among genomic regions. We'll just use the genomewide lambda, which provides a conservative threshold for peak calling.\n\nUsing the genomewide lambda, we can use the Poisson distribution to address the question: **How surprised should I be to see** $k$ reads at position X?\n\n---\n\n\n::: {.cell}\n\n:::\n\n\n## P-values\n\nLet's take a look at a plot of the p-value across a chromosome. What do you notice about this plot, when compared to the coverage of the CUT&RUN coverage above?\n\n\n::: {.cell output-location='slide'}\n\n:::\n\n\n## Peaks\n\nHow many peaks are called in this region?\n\n\n::: {.cell output-location='slide'}\n\n:::\n\n\n## Visualize\n\nLet's visualize these peaks in the context of genomic CUT&RUN signal. We need to define an `AnnotationTrack` with the peak intervals, which we can plot against the CUT&RUN coverage we defined above.\n\nLet us load the data:\n\n\n::: {.cell output-location='slide'}\n\n:::\n\n\n## Visualize\n\nAnd plot:\n\n\n::: {.cell output-location='slide'}\n\n:::\n\n\n## Questions\n\n1.  How many peaks were called throughout the genome? How wide are the called peaks, on average?\n\n2.  How else might we define a significance threshold for identifying peaks?\n\n3.  What might the relative heights of the peaks indicate? What types of technical or biological variables might influence peak heights?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}