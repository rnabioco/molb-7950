{
  "hash": "b115ac30d3f15fb43c7c958808328a53",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"R Bootcamp - Day 1\"\nsubtitle: \"R & RStudio overview\"\nauthor: \"Jay Hesselberth\"\nformat: live-html\nengine: knitr\ndate: last-modified\n---\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n## RStudio - Exercise 1\n\n- We are using RStudio through Posit Cloud for the class.\n- Look at RStudio panels one at a time.\n- Environment, History, Console, Files, Plots, Packages, Help, etc.\n\nSee menu:\n\n**Help > Cheat Sheets > RStudio IDE Cheat Sheet**\n\n## R as a calculator - Exercise 2\n\n- R can function like an advanced calculator\n\n---\n\nTry simple math.\n\n\n::: {.cell}\n```{webr}\n```\n:::\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n::: {.cell}\n\n:::\n\n\nAssign a numeric value to an object.\n\n- `<-` and `=` are *assignment* operators.\n- By convention, R programmers use `<-`.\n- `x <- 1` reads \"set the value of `x` to 1\".\n\n. . .\n\n\n::: {.cell}\n\n:::\n\n\n\n`=` and `==` are two different operators.\n\n- a `=` is used for assignment (e.g., `x = 1`)\n\n- a `==` tests for equivalence (e.g. `x == 1` says \"does `x` equal 1?\")\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n::: {.cell}\n\n:::\n\n\n## Functions and arguments - Exercise 3\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n## Writing a simple function - Exercise 4\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n## Data types - Exercise 5\n\n* There are many data types in R.\n* We'll mainly use **numeric**, **character**, and **logical**.\n\n\n::: {.cell}\n\n:::\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n## Vectors - Exercise 6\n\nLet's create some vectors.\n\n- The `c` function combines values together (e.g., `c(1,2,3)`)\n\n\n\n::: {.cell}\n\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n## Data frames\n\n- A data.frame is a rectangle, where each column is a vector, and each row is a slice across vectors.\n\n- data.frame columns are vectors, and can have different types (numeric, character, factor, etc.).\n\n- A data.frame is constructed with `data.frame()`.\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n## Data frames & tibbles - Exercise 7\n\nCreate a data.frame and tibble.\n\n\n::: {.cell}\n\n:::\n\n\nNow echo the contents of `df` and `tbl` to the console and inspect\n\n## R packages - Exercise 8\n\nLet's do the following to explore R packages:\n\n* Look at the \"Environment\" panel in Rstudio\n* Explore Global Environment\n* Explore the contents of a package\n\n## Quarto Exercise - Exercise 9\n\nLet's do the following to explore Quarto documents:\n\n* Create a new Quarto document\n* Render the document to see the output\n\n## Problem sets and submission\n\nYour first problem set is in `problem-sets/ps-01.qmd`\n",
    "supporting": [
      "ex-01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}